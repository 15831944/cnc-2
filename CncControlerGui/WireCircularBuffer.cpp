#include "WireCircularBuffer.h"

///////////////////////////////////////////////////////////////////
WireCircularBuffer::WireCircularBuffer()
: circularBuffer(10 * 1024)
///////////////////////////////////////////////////////////////////
{
}
///////////////////////////////////////////////////////////////////
WireCircularBuffer::~WireCircularBuffer() {
///////////////////////////////////////////////////////////////////
}
///////////////////////////////////////////////////////////////////
int WireCircularBuffer::peak() {
///////////////////////////////////////////////////////////////////
	byte ret = 0;
	if ( circularBuffer.peak(ret) == false )
		return -1;

	return (int)ret;
}
///////////////////////////////////////////////////////////////////
int WireCircularBuffer::read() {
///////////////////////////////////////////////////////////////////
	byte ret = 0;
	if ( circularBuffer.read(ret) == false )
		return -1;

	return (int)ret;
}
///////////////////////////////////////////////////////////////////
int WireCircularBuffer::read(byte* buffer, int size) {
///////////////////////////////////////////////////////////////////
	return circularBuffer.read(buffer, size);
}
///////////////////////////////////////////////////////////////////
int WireCircularBuffer::write(byte b) {
///////////////////////////////////////////////////////////////////
	return circularBuffer.write(b) ? 1 : 0;
}
///////////////////////////////////////////////////////////////////
bool WireCircularBuffer::write(byte* buffer, int size) {
///////////////////////////////////////////////////////////////////
	return circularBuffer.write(buffer, size) > 0;
}
