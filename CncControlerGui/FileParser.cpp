#include <wx/webview.h>
#include <wx/stc/stc.h>
#include "FileParser.h"

////////////////////////////////////////////////////////////////////////////
FileParser::FileParser(const wxString& fn, CncControl* cnc) 
: cncControl(cnc)
, fileName(fn)
, runInfo()
, debugControls()
, inboundSourceControl(NULL)
{
////////////////////////////////////////////////////////////////////////////
}
////////////////////////////////////////////////////////////////////////////
FileParser::~FileParser() {
////////////////////////////////////////////////////////////////////////////
}
////////////////////////////////////////////////////////////////////////////
bool FileParser::processRelease() {
////////////////////////////////////////////////////////////////////////////
	runInfo.releaseAllPhases();
	return process();
}
////////////////////////////////////////////////////////////////////////////
bool FileParser::processDebug() {
////////////////////////////////////////////////////////////////////////////
	runInfo.debugAllPhases();
	evaluateDebugState(true);
	return process();
}
////////////////////////////////////////////////////////////////////////////
bool FileParser::pause() {
////////////////////////////////////////////////////////////////////////////
	runInfo.setPauseFlag(!runInfo.getPauseFlag());
	return runInfo.getPauseFlag();
}
////////////////////////////////////////////////////////////////////////////
void FileParser::debugNextPath() {
////////////////////////////////////////////////////////////////////////////
	// todo
	// CncWorkingParameters cwp = pathHandler->getCncWorkingParameters();
	// runInfo.setLastLineNumber(cwp.currentLineNumber);
	
	runInfo.setNextFlag(true);
}
////////////////////////////////////////////////////////////////////////////
void FileParser::debugNextStep() {
////////////////////////////////////////////////////////////////////////////
	if ( runInfo.getCurrentDebugState() == true )
		runInfo.setNextFlag(true);
}
////////////////////////////////////////////////////////////////////////////
void FileParser::debugStop() {
////////////////////////////////////////////////////////////////////////////
	runInfo.setCurrentDebugState(false);
	runInfo.setStopFlag(true);
	broadcastDebugState(false);
}
////////////////////////////////////////////////////////////////////////////
void FileParser::debugFinish() {
////////////////////////////////////////////////////////////////////////////
	runInfo.setCurrentDebugState(false);
	broadcastDebugState(false);
}
////////////////////////////////////////////////////////////////////////////
void FileParser::selectSourceControl(unsigned long pos) {
////////////////////////////////////////////////////////////////////////////
	selectSourceControl(inboundSourceControl, pos);
}
////////////////////////////////////////////////////////////////////////////
void FileParser::selectSourceControl(wxStyledTextCtrl* ctl, unsigned long pos) {
////////////////////////////////////////////////////////////////////////////
	if ( ctl == NULL ) 
		return;
		
	ctl->GotoLine(pos);
	
	if ( pos == 0 ) {
		ctl->SetSelectionStart(0);
		ctl->SetSelectionEnd(0);
	} else {
		ctl->SetSelectionStart(ctl->GetCurrentPos());
		ctl->SetSelectionEnd(ctl->GetLineEndPosition(pos));
	}
}
////////////////////////////////////////////////////////////////////////////
void FileParser::setDebuggerControls(DebugControls& dc) { 
////////////////////////////////////////////////////////////////////////////
	debugControls = dc; 
	broadcastDebugControls(dc);
}

