#include "3D/GLLineCluster.h"

/////////////////////////////////////////////////////////////////
GLI::GLVectiesTuple::GLVectiesTuple() 
: _x1(0.0)
, _y1(0.0)
, _z1(0.0)
, _x2(0.0)
, _y2(0.0)
, _z2(0.0)
/////////////////////////////////////////////////////////////////
{
}
/////////////////////////////////////////////////////////////////
GLI::GLVectiesTuple::~GLVectiesTuple() {
/////////////////////////////////////////////////////////////////
	
}
/////////////////////////////////////////////////////////////////
void GLI::GLVectiesTuple::setData(float x1, float y1, float z1, float x2, float y2, float z2) {
/////////////////////////////////////////////////////////////////
	_x1 = x1;	_x2 = x2;
	_y1 = y1;	_y2 = y2;
	_z1 = z1;	_z2 = z2;
}


/////////////////////////////////////////////////////////////////
GLI::GLLineCluster::GLLineCluster() 
: std::vector<GLVectiesTuple>()
/////////////////////////////////////////////////////////////////
{
}
/////////////////////////////////////////////////////////////////
GLI::GLLineCluster::~GLLineCluster() {
/////////////////////////////////////////////////////////////////
}
/////////////////////////////////////////////////////////////////
void GLI::GLLineCluster::clear() {
/////////////////////////////////////////////////////////////////
	std::vector<GLVectiesTuple>::clear();
}
/////////////////////////////////////////////////////////////////
void GLI::GLLineCluster::push_back(const GLVectiesTuple& t) {
/////////////////////////////////////////////////////////////////
	std::vector<GLVectiesTuple>::push_back(t);
}

