#include "ManuallyPathHandlerCnc.h"

/////////////////////////////////////////////////////////////
ManuallyPathHandlerCnc::ManuallyPathHandlerCnc(CncControl* cnc)
: PathHandlerBase()
, cncControl(cnc)
, lastSpeedType(CncSpeedRapid)
, lastSpeedValue(0.0)
/////////////////////////////////////////////////////////////
{
}
/////////////////////////////////////////////////////////////
ManuallyPathHandlerCnc::~ManuallyPathHandlerCnc() {
/////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////
void ManuallyPathHandlerCnc::logMeasurementStart() {
//////////////////////////////////////////////////////////////////
	wxASSERT(cncControl);
	cncControl->getSerial()->startMeasurement();
}
//////////////////////////////////////////////////////////////////
void ManuallyPathHandlerCnc::logMeasurementEnd() {
//////////////////////////////////////////////////////////////////
	wxASSERT(cncControl);
	cncControl->getSerial()->stopMeasurement();
}
//////////////////////////////////////////////////////////////////
void ManuallyPathHandlerCnc::prepareWork() {
//////////////////////////////////////////////////////////////////
	// curently nothing todo
}
//////////////////////////////////////////////////////////////////
void ManuallyPathHandlerCnc::finishWork() {
//////////////////////////////////////////////////////////////////
	// curently nothing todo
}
//////////////////////////////////////////////////////////////////
void ManuallyPathHandlerCnc::switchToolState(bool state) {
//////////////////////////////////////////////////////////////////
	state == true ? cncControl->switchToolOn() : cncControl->switchToolOff();
}
//////////////////////////////////////////////////////////////////
bool ManuallyPathHandlerCnc::processLinearMove(const MoveDefinition& md) {
//////////////////////////////////////////////////////////////////
	wxASSERT( cncControl != NULL );
	
	// tool handling
	switchToolState(md.toolState);
	
	// speed handling
	if ( md.speedType != lastSpeedType  || md.f != lastSpeedValue ) {
		if ( cncControl->changeCurrentFeedSpeedXYZ_MM_MIN(md.speedType, md.f) == false )
			return;
	}
	
	// move
	if ( md.absoluteMove == true ) {
		currentPos.setX(md.x);
		currentPos.setX(md.y);
		currentPos.setX(md.z);
	} else {
		currentPos.incX(md.x);
		currentPos.incX(md.y);
		currentPos.incX(md.z);
	}
	
	return cncControl->moveAbsLinearMetricXYZ(md.x, md.y, md.z, false);
}
