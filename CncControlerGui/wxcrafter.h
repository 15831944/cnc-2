//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: wxcrafter.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef _CNCGUICONTROLLER_CNCCONTROLERGUI_WXCRAFTER_BASE_CLASSES_H
#define _CNCGUICONTROLLER_CNCCONTROLERGUI_WXCRAFTER_BASE_CLASSES_H

#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/frame.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/aui/framemanager.h>
#include <wx/aui/dockart.h>
#include <wx/pen.h>
#include <wx/aui/auibar.h>
#include <map>
#include <wx/menu.h>
#include <wx/bmpbuttn.h>
#include <wx/toolbar.h>
#include <wx/stattext.h>
#include <wx/bmpcbox.h>
#include <wx/slider.h>
#include <wx/combobox.h>
#include <wx/arrstr.h>
#include <wx/tglbtn.h>
#include <wx/button.h>
#include <wx/panel.h>
#include <wx/choice.h>
#include <wx/simplebook.h>
#include <wx/imaglist.h>
#include <wx/statline.h>
#include <wx/notebook.h>
#include <wx/statbmp.h>
#include <wx/stc/stc.h>
#include <wx/textctrl.h>
#include <wx/dataview.h>
#include <wx/splitter.h>
#include <wx/toolbook.h>
#include <wx/propgrid/manager.h>
#include <wx/listbook.h>
#include <wx/scrolwin.h>
#include <wx/radiobox.h>
#include <wx/checkbox.h>
#include <wx/spinctrl.h>
#include <wx/listctrl.h>
#include "CncZView.h"
#include <wx/timer.h>
#include <wx/treectrl.h>
#include <wx/webview.h>
#include <wx/propgrid/property.h>
#include <wx/propgrid/advprops.h>
#include <wx/choicebk.h>
#include <wx/dialog.h>
#include <wx/bitmap.h>
#include <wx/icon.h>
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/treebook.h>
#endif

#ifdef WXC_FROM_DIP
#undef WXC_FROM_DIP
#endif
#if wxVERSION_NUMBER >= 3100
#define WXC_FROM_DIP(x) wxWindow::FromDIP(x, NULL)
#else
#define WXC_FROM_DIP(x) x
#endif


class MainFrameBClass : public wxFrame
{
protected:
    wxAuiManager* m_auimgrMain;
    wxAuiToolBar* m_auibarMain;
    std::map<int, wxMenu*> m_dropdownMenus;
    wxBitmapButton* m_bmpButton4490;
    wxStaticText* m_staticText1842;
    wxBitmapButton* m_searchConnections;
    wxBitmapComboBox* m_portSelector;
    wxBitmapButton* m_connect;
    wxBitmapButton* m_refPosition;
    wxBitmapButton* m_btSelectSetup;
    wxBitmapButton* m_btSelectReferences;
    wxBitmapButton* m_btSelectManuallyMove;
    wxBitmapButton* m_btSelectTemplate;
    wxBitmapButton* m_btSelectInboundTest;
    wxBitmapButton* m_btSelectInboundPreview;
    wxBitmapButton* m_btSelectCncPreview;
    wxBitmapButton* m_btSelectTemplatePreview;
    wxMenu* m_configStepDelayMenu;
    wxMenuItem* m_miCfgStepDelayMin;
    wxMenuItem* m_miCfgStepDelayMax;
    wxMenuItem* m_miCfgSimulateArduino;
    wxMenuItem* m_miCfgCustom;
    wxSlider* m_stepDelay;
    wxStaticText* m_stepDelayValue;
    wxStaticText* m_staticText16032;
    wxComboBox* m_cbRenderResolution;
    wxBitmapButton* m_rcReset;
    wxBitmapToggleButton* m_btProbeMode;
    wxBitmapToggleButton* m_btSpeedControl;
    wxBitmapButton* m_rcDebugConfig;
    wxBitmapButton* m_rcDebug;
    wxBitmapButton* m_rcNextBreakpoint;
    wxBitmapButton* m_rcNextStep;
    wxBitmapButton* m_rcFinish;
    wxBitmapButton* m_rcSecureDlg;
    wxBitmapButton* m_rcRun;
    wxBitmapButton* m_rcPause;
    wxBitmapButton* m_rcStop;
    wxButton* m_btnEmergenyStop;
    wxPanel* m_winMainView;
    wxChoice* m_mainViewSelector;
    wxSimplebook* m_mainViewBook;
    wxPanel* m_mainBookSourcePanel;
    wxButton* m_openSourceExtern;
    wxButton* m_openSvgExtern;
    wxStaticLine* m_staticLine44728;
    wxButton* m_saveTemplate;
    wxButton* m_reloadTemplate;
    wxButton* m_renameTemplate;
    wxButton* m_removeTemplate;
    wxStaticLine* m_staticLine4472;
    wxBitmapToggleButton* m_btSvgToggleWordWrap;
    wxNotebook* m_templateNotebook;
    wxPanel* m_panelTplObserver;
    wxPanel* m_panelTemplateObserverPlaceholder;
    wxPanel* m_panelTplEdit;
    wxBitmapToggleButton* m_tbCaseSensitive;
    wxBitmapToggleButton* m_tbWholeWord;
    wxBitmapToggleButton* m_tbRegEx;
    wxBitmapToggleButton* m_tbHighLight;
    wxStaticBitmap* m_sourceEditSearchState;
    wxComboBox* m_sourceEditSearch;
    wxButton* m_svgEditFind;
    wxButton* m_svgEditFindPrev;
    wxSimplebook* m_editorToolBox;
    wxPanel* m_panelToolBoxSvg;
    wxPanel* m_panelToolBoxGcode;
    wxPanel* m_panelToolBoxBinary;
    wxStaticText* m_staticText6074;
    wxComboBox* m_cbBinaryViewMode;
    wxButton* m_btExtractSourceAsNewTpl;
    wxStyledTextCtrl* m_stcFileContent;
    wxStaticText* m_filePosition;
    wxTextCtrl* m_sourceEditStatus;
    wxStaticText* m_editMode;
    wxPanel* m_panelTplSourceExt;
    wxSimplebook* m_simpleBookSourceExt;
    wxPanel* m_panelTplNull;
    wxStaticText* m_staticText6112;
    wxPanel* m_panelTplUserAgent;
    wxTextCtrl* m_svgRootNode;
    wxStaticText* m_staticText1498;
    wxDataViewListCtrl* m_dvListCtrlSvgUAInboundPathList;
    wxStaticText* m_staticText14983;
    wxDataViewListCtrl* m_dvListCtrlSvgUAUseDirective;
    wxStaticText* m_staticText1500;
    wxDataViewListCtrl* m_dvListCtrlSvgUADetailInfo;
    wxTextCtrl* m_selectedUAInfo;
    wxPanel* m_panelTplGCodeSequence;
    wxStaticText* m_staticText7796;
    wxPanel* m_gCodeSequenceListPlaceholder;
    wxPanel* m_panelTplNestedInfo;
    wxSplitterWindow* m_splitter6082;
    wxPanel* m_splitterPage6086;
    wxTextCtrl* m_nestedDataHeader;
    wxPanel* m_splitterPage6090;
    wxTextCtrl* m_nestedSource;
    wxPanel* m_mainBookSetup;
    wxStaticText* m_staticText5137;
    wxButton* m_loadConfiguration;
    wxButton* m_saveConfiguration;
    wxNotebook* m_notebook4561;
    wxPanel* m_setupConfigPage;
    wxToolbook* m_configurationToolbook;
    wxPanel* m_panel5618;
    wxPanel* m_panel5620;
    wxPanel* m_panel5610;
    wxPanel* m_panel5612;
    wxPanel* m_panel5614;
    wxPanel* m_panel5616;
    wxPropertyGridManager* m_pgMgrSetup;
    wxPanel* m_setupToolMagazine;
    wxPanel* m_toolMagazinePlaceholder;
    wxPanel* m_setupSpeedWizard;
    wxStaticText* m_staticText5677;
    wxSlider* m_speedConfigSlider;
    wxStaticText* m_staticText5709;
    wxStaticText* m_staticText5717;
    wxTextCtrl* m_speedConfigStepsX;
    wxStaticText* m_staticText5719;
    wxTextCtrl* m_speedConfigStepsY;
    wxStaticText* m_staticText5721;
    wxTextCtrl* m_speedConfigStepsZ;
    wxStaticLine* m_staticLine5781;
    wxStaticText* m_staticText5777;
    wxComboBox* m_speedConfigAccelAxis;
    wxNotebook* m_notebook5687;
    wxPanel* m_panel5699;
    wxSplitterWindow* m_splitter5759;
    wxPanel* m_accelGraphPanelMain;
    wxPanel* m_accelGraphPanel;
    wxPanel* m_splitterPage5767;
    wxTextCtrl* m_speedConfigTrace;
    wxPanel* m_panelSpeedPgAxisX;
    wxTextCtrl* m_accelConfigTraceX;
    wxTextCtrl* m_speedConfigTraceX;
    wxPanel* m_panelSpeedPgAxisY;
    wxTextCtrl* m_accelConfigTraceY;
    wxTextCtrl* m_speedConfigTraceY;
    wxPanel* m_panelSpeedPgAxisZ;
    wxTextCtrl* m_accelConfigTraceZ;
    wxTextCtrl* m_speedConfigTraceZ;
    wxPanel* m_mainBookReference;
    wxStaticText* m_staticText779;
    wxStaticLine* m_staticLine783;
    wxListbook* m_listbook7170;
    wxPanel* m_predefinedPositions;
    wxScrolledWindow* m_scrollWin7112;
    wxStaticText* m_staticText1171;
    wxStaticText* m_staticText1173;
    wxComboBox* m_homeDefintion;
    wxButton* m_moveHome;
    wxStaticLine* m_staticLine2177;
    wxStaticLine* m_staticLine2179;
    wxStaticText* m_staticText2182;
    wxComboBox* m_zeroMoveModeXY;
    wxButton* m_moveXYtoZero;
    wxStaticText* m_staticText218228;
    wxComboBox* m_zeroMoveModeXYZ;
    wxButton* m_moveXYZtoZero;
    wxStaticText* m_staticText21822831;
    wxComboBox* m_zeroMoveModeZ;
    wxButton* m_moveZtoZero;
    wxStaticLine* m_staticLine2191;
    wxStaticLine* m_staticLine2193;
    wxStaticText* m_staticText1177233;
    wxStaticText* m_staticText11772;
    wxButton* m_xToMax;
    wxButton* m_xToMid;
    wxButton* m_xToMin;
    wxButton* m_yToMax;
    wxButton* m_yToMid;
    wxButton* m_yToMin;
    wxStaticLine* m_staticLine2195;
    wxStaticLine* m_staticLine2197;
    wxStaticText* m_staticText1175;
    wxStaticText* m_staticText1177;
    wxButton* m_zToMax;
    wxButton* m_zToMid;
    wxButton* m_zToMin;
    wxButton* m_zToTop;
    wxStaticText* m_staticText2438;
    wxButton* m_zToBottom;
    wxPanel* m_panel7172;
    wxPanel* m_navigator;
    wxPanel* m_navigationPanelPlaceholder;
    wxStaticLine* m_staticLine5550;
    wxStaticBitmap* m_staticBitmap5901;
    wxStaticText* m_cbStepSensitivityText;
    wxRadioBox* m_rbStepSensitivity;
    wxStaticLine* m_staticLine5552;
    wxStaticBitmap* m_staticBitmap5907;
    wxStaticText* m_staticText5909;
    wxPanel* m_mainBookManual;
    wxStaticText* m_staticText1160;
    wxStaticLine* m_staticLine1162;
    wxRadioBox* m_mmRadioCoordinates;
    wxStaticText* m_staticText5101;
    wxComboBox* m_manuallyToolId;
    wxCheckBox* m_checkBoxToolEnabled;
    wxStaticText* m_staticText5105;
    wxSlider* m_manuallySpeedSlider;
    wxTextCtrl* m_manuallySpeedValue;
    wxStaticText* m_staticText5113;
    wxStaticLine* m_staticLine5729;
    wxCheckBox* m_manuallyCorrectLimitPos;
    wxStaticLine* m_staticLine5109;
    wxStaticText* m_staticText793;
    wxButton* m_minManuallyXSlider;
    wxTextCtrl* m_metricX;
    wxButton* m_maxManuallyXSlider;
    wxButton* m_zeroManuallyXSlider;
    wxButton* m_signManuallyXSlider;
    wxStaticText* m_mmUnitX;
    wxSlider* m_xManuallySlider;
    wxStaticLine* m_staticLine5129;
    wxStaticText* m_staticText797;
    wxButton* m_minManuallyYSlider;
    wxTextCtrl* m_metricY;
    wxButton* m_maxManuallyYSlider;
    wxButton* m_zeroManuallyYSlider;
    wxButton* m_signManuallyYSlider;
    wxStaticText* m_mmUnitY;
    wxSlider* m_yManuallySlider;
    wxStaticLine* m_staticLine5133;
    wxStaticText* m_staticText7973;
    wxButton* m_minManuallyZSlider;
    wxTextCtrl* m_metricZ;
    wxButton* m_maxManuallyZSlider;
    wxButton* m_zeroManuallyZSlider;
    wxButton* m_signManuallyZSlider;
    wxStaticText* m_mmUnitZ;
    wxSlider* m_zManuallySlider;
    wxStaticLine* m_staticLine5135;
    wxPanel* m_mainBookTest;
    wxListbook* m_testCaseBook;
    wxPanel* m_testIntervalPage;
    wxStaticText* m_staticText2117;
    wxStaticLine* m_staticLine2253;
    wxComboBox* m_testIntervalMode;
    wxStaticText* m_staticText2105;
    wxStaticText* m_staticText2107;
    wxStaticText* m_staticText2109;
    wxStaticText* m_staticText2149;
    wxStaticText* m_staticText2115;
    wxStaticText* m_staticText2165;
    wxStaticLine* m_staticLine2111;
    wxStaticText* m_testAxisX;
    wxSpinCtrl* m_testCountX;
    wxTextCtrl* m_testDistanceX;
    wxStaticText* m_staticText2101;
    wxComboBox* m_testFirstX;
    wxStaticText* m_staticText2151;
    wxCheckBox* m_testModeX;
    wxStaticText* m_testDurationCounterX;
    wxStaticText* m_testAxisY;
    wxSpinCtrl* m_testCountY;
    wxTextCtrl* m_testDistanceY;
    wxStaticText* m_staticText210115;
    wxComboBox* m_testFirstY;
    wxStaticText* m_staticText215123;
    wxCheckBox* m_testModeY;
    wxStaticText* m_testDurationCounterY;
    wxStaticText* m_testAxisZ;
    wxSpinCtrl* m_testCountZ;
    wxTextCtrl* m_testDistanceZ;
    wxStaticText* m_staticText21011521;
    wxComboBox* m_testFirstZ;
    wxStaticText* m_staticText215124;
    wxCheckBox* m_testModeZ;
    wxStaticText* m_testDurationCounterZ;
    wxPanel* m_testDimensions;
    wxStaticText* m_staticText21174;
    wxStaticLine* m_staticLine22535;
    wxStaticText* m_staticText2377;
    wxStaticText* m_staticText2418;
    wxStaticText* m_staticText2381;
    wxStaticText* m_staticText2379;
    wxStaticText* m_staticText2383;
    wxStaticLine* m_staticLine2385;
    wxStaticText* m_testDimAxisX;
    wxCheckBox* m_testDimModeX;
    wxCheckBox* m_testDimMinX;
    wxCheckBox* m_testDimMaxX;
    wxTextCtrl* m_testDimResultX;
    wxStaticText* m_staticText2431;
    wxCheckBox* m_testDimResultStateX;
    wxButton* m_testDimTakeX;
    wxStaticText* m_testDimAxisY;
    wxCheckBox* m_testDimModeY;
    wxCheckBox* m_testDimMinY;
    wxCheckBox* m_testDimMaxY;
    wxTextCtrl* m_testDimResultY;
    wxStaticText* m_testDimUnitX6;
    wxCheckBox* m_testDimResultStateY;
    wxButton* m_testDimTakeY;
    wxStaticText* m_testDimAxisZ;
    wxCheckBox* m_testDimModeZ;
    wxCheckBox* m_testDimMinZ;
    wxCheckBox* m_testDimMaxZ;
    wxTextCtrl* m_testDimResultZ;
    wxStaticText* m_testDimUnitX12;
    wxCheckBox* m_testDimResultStateZ;
    wxButton* m_testDimTakeZ;
    wxStaticLine* m_staticLine2429;
    wxButton* m_testDimTakeAll;
    wxPanel* m_testLimitPage;
    wxStaticText* m_staticText21172;
    wxStaticLine* m_staticLine22533;
    wxToggleButton* m_testToggleEndSwitch;
    wxPanel* m_testToolPage;
    wxStaticText* m_staticText211726;
    wxStaticLine* m_staticLine225337;
    wxToggleButton* m_testToggleTool;
    wxPanel* m_mainBookPreviewPanel;
    wxPanel* m_filePreviewPlaceholder;
    wxPanel* m_panel4398;
    wxStaticText* m_staticText4402;
    wxPanel* m_panel6173;
    wxTextCtrl* m_filePreviewDetails;
    wxTextCtrl* m_currentFileMangerPreviewFileName;
    wxPanel* m_winMonitorView;
    wxChoice* m_monitorViewSelector;
    wxSimplebook* m_monitorViewBook;
    wxPanel* m_monitorBookCncPanel;
    wxNotebook* m_outboundNotebook;
    wxPanel* m_cncParameters;
    wxListbook* m_notebookConfig;
    wxPanel* m_cncSummary;
    wxStaticText* m_staticText11481;
    wxListCtrl* m_cncSummaryListCtrl;
    wxButton* m_btCancelRun;
    wxButton* m_btConfirmRun;
    wxPanel* m_cncSetters;
    wxStaticText* m_staticText1150;
    wxTextCtrl* m_setterListCount;
    wxButton* m_btClearSetterList;
    wxButton* m_btRefreshSetterList;
    wxListCtrl* m_setterList;
    wxPanel* m_controllerConfiguration;
    wxStaticText* m_staticText12831;
    wxButton* m_btRequestCtlConfig;
    wxDataViewListCtrl* m_dvListCtrlControllerConfig;
    wxPanel* m_controllerPinReport;
    wxStaticText* m_staticText128313;
    wxButton* m_btRequestControllerPins;
    wxDataViewListCtrl* m_dvListCtrlControllerPins;
    wxPanel* m_conrollerMessages;
    wxStaticText* m_staticText1283132;
    wxButton* m_btClearMsgHistory;
    wxTextCtrl* m_controllerMsgHistory;
    wxPanel* m_cncPrePorcessor;
    wxPanel* m_preprocessorPlaceholder;
    wxPanel* m_cnc3DPane;
    wxListbook* m_listbookMonitor;
    wxPanel* m_panel7704;
    wxBitmapToggleButton* m_btSaveOutboundAsTemplate1;
    wxPanel* m_placeholderPanel;
    wxStaticLine* m_staticLine50163;
    wxBitmapToggleButton* m_btnOrigin;
    wxBitmapToggleButton* m_btnRuler;
    wxBitmapToggleButton* m_btnHelpLines;
    wxBitmapToggleButton* m_btnBoundBox;
    wxBitmapToggleButton* m_btnPosMarker;
    wxBitmapToggleButton* m_btnFlyPath;
    wxStaticLine* m_staticLine5016;
    wxBitmapToggleButton* m_switchMonitoing;
    wxStaticLine* m_staticLine3525;
    wxButton* m_3D_Refreh;
    wxButton* m_3D_Clear;
    wxStaticLine* m_staticLine47803;
    wxStaticText* m_staticText32334;
    wxSlider* m_displayInterval;
    wxPanel* m_3DSplitterPlaceholder;
    wxPanel* m_3DOutboundStatistics;
    wxStaticLine* m_staticLine7091;
    wxButton* m_btShowHideStatistics;
    wxButton* m_btShowHideReplayPane;
    wxStaticLine* m_staticLine50051;
    wxStaticText* m_staticText5014;
    wxStaticBitmap* m_lableWorkpieceThickness;
    wxStaticBitmap* m_toolState;
    wxTextCtrl* m_toolId;
    wxStaticLine* m_staticLine5005;
    wxStaticLine* m_staticLine5008;
    wxStaticText* m_staticText1128;
    wxTextCtrl* m_crossings;
    wxStaticText* m_staticText1966;
    wxTextCtrl* m_passingCount;
    wxStaticLine* m_staticLine50083;
    wxStaticText* m_staticText395;
    wxTextCtrl* m_cmdDuration;
    wxButton* m_motionMonitorOptionDlg;
    wxStaticLine* m_staticLine34832;
    wxButton* m_3D_Top;
    wxButton* m_3D_Bottom;
    wxButton* m_3D_Front;
    wxButton* m_3D_Rear;
    wxButton* m_3D_Left;
    wxButton* m_3D_Right;
    wxStaticLine* m_staticLine3483;
    wxButton* m_3D_Perspective1;
    wxButton* m_3D_Perspective2;
    wxButton* m_3D_Perspective3;
    wxButton* m_3D_Perspective4;
    wxStaticLine* m_staticLine2341;
    wxPanel* m_cncPostProcessor;
    wxListbook* m_listbookPostProcessor;
    wxPanel* m_panel7697;
    wxStaticText* m_staticText6138;
    wxBitmapToggleButton* m_btSaveOutboundAsTemplate2;
    wxBitmapToggleButton* m_btToggleOutboundEditorWordWrap;
    wxSimplebook* m_simpleBookOutBoundEditor;
    wxPanel* m_panel6208;
    wxStyledTextCtrl* m_outboundFileSource;
    wxPanel* m_panel6210;
    wxScrolledWindow* m_scrollWin7361;
    wxPanel* m_outboundEditorSvgViewPlaceholder;
    wxStaticText* m_outboundPosition;
    wxTextCtrl* m_outboundEditStatus;
    wxStaticText* m_outboundEditMode;
    wxPanel* m_panel7699;
    wxStaticText* m_staticText6140;
    wxPanel* m_outboundPreviewPlaceholder;
    wxStaticText* m_staticText6218;
    wxPanel* m_monitorTemplatePanel;
    wxPanel* m_monitorTemplatePreviewPlaceHolder;
    wxPanel* m_panel5144;
    wxStaticText* m_staticText5142;
    wxTextCtrl* m_currentInboundFilePreviewFileName;
    wxPanel* m_panelZView;
    CncZView* m_zView;
    wxStaticText* m_infoToolDiameter;
    wxPanel* m_winFileView;
    wxCheckBox* m_keepFileManagerPreview;
    wxStaticText* m_staticText6018;
    wxStaticLine* m_staticLine4345;
    wxSplitterWindow* m_splitter6478;
    wxPanel* m_splitterPage6482;
    wxListCtrl* m_lruList;
    wxPanel* m_splitterPage6490;
    wxPanel* m_mainFileViewPlaceholder;
    wxPanel* m_winLoggerView;
    wxNotebook* m_loggerNotebook;
    wxPanel* m_panelStartupTrace;
    wxTextCtrl* m_startupTrace;
    wxPanel* m_panel5878;
    wxTextCtrl* m_logger;
    wxBitmapButton* m_clearLogger;
    wxBitmapButton* m_copyLogger;
    wxStaticLine* m_staticLine7605;
    wxBitmapToggleButton* m_showLoggerOnDemand;
    wxStaticText* m_staticText58651;
    wxStaticBitmap* m_gamepadState;
    wxStaticText* m_staticText5865;
    wxStaticBitmap* m_gpBmp1;
    wxStaticBitmap* m_gpBmp2;
    wxStaticBitmap* m_gpBmp3;
    wxStaticBitmap* m_gpBmp4;
    wxStaticBitmap* m_staticBitmap5890;
    wxTextCtrl* m_tmpTraceInfo;
    wxPanel* m_statusBar;
    wxStaticText* m_svgParseMode;
    wxStaticLine* m_staticLine6801;
    wxTextCtrl* m_inputFileName;
    wxStaticLine* m_staticLine602;
    wxStaticBitmap* m_heartbeatState;
    wxStaticLine* m_staticLine60214444;
    wxStaticBitmap* m_staticBitmap7262;
    wxTextCtrl* m_lastConfigNotification;
    wxStaticLine* m_staticLine6021;
    wxPanel* m_activityPanel;
    wxStaticLine* m_staticLine680114;
    wxStaticText* m_staticText5656;
    wxStaticBitmap* m_probeModeState;
    wxStaticText* m_probeModeStateLabel;
    wxStaticLine* m_staticLine60234112;
    wxStaticText* m_staticText56563;
    wxStaticBitmap* m_speedCtrlState;
    wxStaticText* m_speedCtrlStateLabel;
    wxStaticLine* m_staticLine680;
    wxStaticText* LableF;
    wxTextCtrl* m_configuredFeedSpeed;
    wxTextCtrl* m_configuredFeedSpeedMode;
    wxTextCtrl* m_realtimeFeedSpeed;
    wxTextCtrl* m_realtimeFeedSpeedMode;
    wxStaticLine* m_staticLine602341127;
    wxStaticText* m_staticText5651;
    wxStaticBitmap* m_refPosState;
    wxStaticLine* m_staticLine6801222;
    wxStaticText* LableX;
    wxTextCtrl* m_xAxis;
    wxTextCtrl* m_xAxisCtl;
    wxStaticLine* m_staticLine602348910;
    wxStaticText* LabelY;
    wxTextCtrl* m_yAxis;
    wxTextCtrl* m_yAxisCtl;
    wxStaticLine* m_staticLine6023489;
    wxStaticText* LableZ;
    wxTextCtrl* m_zAxis;
    wxTextCtrl* m_zAxisCtl;
    wxStaticLine* m_staticLine602348;
    wxComboBox* m_unit;
    wxStaticLine* m_staticLine60234;
    wxStaticText* m_staticText1196;
    wxPanel* m_xMinLimit;
    wxPanel* m_yMinLimit;
    wxPanel* m_zMinLimit;
    wxPanel* m_xMaxLimit;
    wxPanel* m_yMaxLimit;
    wxPanel* m_zMaxLimit;
    wxStaticLine* m_staticLine602341;
    wxStaticText* m_staticText5637;
    wxPanel* m_supportButton1State;
    wxPanel* m_supportButton2State;
    wxPanel* m_supportButton3State;
    wxPanel* m_cableConnectedState;
    wxPanel* m_toolPowerObserverState;
    wxStaticLine* m_staticLine6023412;
    wxStaticBitmap* m_updateManagerUpdate;
    wxPanel* m_svgUnitCalulator;
    wxStaticText* m_staticText3261;
    wxComboBox* m_cbUCUnitFrom;
    wxStaticText* m_staticText3259;
    wxComboBox* m_cbUCUnitTo;
    wxTextCtrl* m_cbUCValueFrom;
    wxTextCtrl* m_cbUCValueTo;
    wxStaticLine* m_staticLine6549;
    wxComboBox* m_cbMetricUnitFrom;
    wxTextCtrl* m_metricValueFrom;
    wxComboBox* m_cbMetricUnitTo;
    wxTextCtrl* m_metricValueTo;
    wxButton* m_btUCClose;
    wxPanel* m_serialSpyView;
    wxButton* m_enableSerialSpy;
    wxButton* m_MarkSerialSpy;
    wxButton* m_clearSerialSpy;
    wxComboBox* m_cbSerialSpyMode;
    wxBitmapToggleButton* m_clearSerialSpyOnConnect;
    wxBitmapToggleButton* m_clearSerialSpyBeforNextRun;
    wxPanel* m_serialSpyPlaceholder;
    wxSimplebook* m_sypDetailsBook;
    wxPanel* m_unknownPanel;
    wxStaticText* m_staticText72374;
    wxTextCtrl* m_lnUnkonwnDetails;
    wxStaticBitmap* m_staticBitmap7230;
    wxDataViewListCtrl* m_spyUnknownDetails;
    wxButton* m_btOpenSpyDetailWindow;
    wxPanel* m_inboundPanel;
    wxStaticText* m_staticText72373;
    wxTextCtrl* m_lnInboundDetails;
    wxStaticBitmap* m_staticBitmap7232;
    wxDataViewListCtrl* m_spyInboundDetails;
    wxButton* m_button75612;
    wxPanel* m_outbundPanel;
    wxStaticText* m_staticText7237;
    wxTextCtrl* m_lnOutboundDetails;
    wxStaticBitmap* m_staticBitmap7234;
    wxDataViewListCtrl* m_spyOutboundDetails;
    wxButton* m_button75611;
    wxPanel* m_debuggerView;
    wxPropertyGridManager* m_debuggerPropertyManagerGrid;
    wxPanel* m_positionMonitorView;
    wxNotebook* m_notebookSpeedMonitor;
    wxPanel* m_panel7502;
    wxBitmapToggleButton* m_btTogglePosSpy;
    wxBitmapButton* m_btCopyPosSpy;
    wxBitmapButton* m_btSearchPosSpy;
    wxBitmapButton* m_btClearPositionSpy;
    wxComboBox* m_cbContentPosSpy;
    wxStaticText* m_staticText4526;
    wxTextCtrl* m_positionSpyCount;
    wxListCtrl* m_positionSpy;
    wxBitmapButton* m_bmpButton47181;
    wxBitmapButton* m_bmpButton4718;
    wxBitmapButton* m_bmpButton47182;
    wxBitmapButton* m_bmpButton47183;
    wxPanel* m_panel7504;
    wxPanel* m_speedMonitorPlaceholder;
    wxPanel* m_speedPanel;
    wxMenuBar* m_menuBar;
    wxMenu* m_menuFile;
    wxMenuItem* m_miNewTemplate;
    wxMenuItem* m_miOpenTemplate;
    wxMenuItem* m_miReloadTemplate;
    wxMenuItem* m_miSaveTemplate;
    wxMenuItem* m_miSaveTemplateAs;
    wxMenuItem* m_miSaveEmuOutput;
    wxMenuItem* m_sep20;
    wxMenuItem* m_miExit;
    wxMenu* m_menuView;
    wxMenuItem* m_miToolbar;
    wxMenuItem* m_miViewStatusbar;
    wxMenuItem* m_miViewTemplateManager;
    wxMenuItem* m_miViewMainView;
    wxMenuItem* m_miViewMonitor;
    wxMenuItem* m_miViewZAxis;
    wxMenuItem* m_miViewPosMonitor;
    wxMenuItem* m_miViewDebugger;
    wxMenuItem* m_miViewSpy;
    wxMenuItem* m_miViewLogger;
    wxMenuItem* m_miViewUnitCalculator;
    wxMenuItem* m_menuItem1665;
    wxMenuItem* m_miViewAll;
    wxMenuItem* m_miHideAll;
    wxMenu* m_menuPerspective;
    wxMenuItem* m_miPerspectiveDefault;
    wxMenuItem* m_miPerspectiveRun;
    wxMenuItem* m_miPerspectiveDebug;
    wxMenuItem* m_miPerspectiveSource;
    wxMenuItem* m_menuItem2771;
    wxMenuItem* m_menuSavePerspectiveDefault;
    wxMenuItem* m_menuSavePerspectiveRun;
    wxMenuItem* m_menuSavePerspectiveDebug;
    wxMenuItem* m_menuSavePerspectiveSource;
    wxMenuItem* m_menuItem27711;
    wxMenuItem* m_menuAddUserPerspective;
    wxMenuItem* m_menuRenameUserPerspective;
    wxMenuItem* m_menuRemoveUserPerspective;
    wxMenu* m_menuMonitoring;
    wxMenuItem* m_menuItemUpdCoors;
    wxMenuItem* m_menuItemUpdDraw;
    wxMenuItem* m_menuItemAllowEvents;
    wxMenuItem* m_menuItemDisplayUserAgent;
    wxMenuItem* m_menuItemToolControls;
    wxMenuItem* m_menuSeparator726;
    wxMenuItem* m_menuItemDebugSerial;
    wxMenuItem* m_menuItemFreezeLogger;
    wxMenuItem* m_menuSeparator1725;
    wxMenuItem* m_menuItemMinMonitoring;
    wxMenuItem* m_menuItemNormalMonitoring;
    wxMenu* m_menuRequestor;
    wxMenuItem* m_miRqtIdleMessages;
    wxMenuItem* m_menuItem2530;
    wxMenuItem* m_miRqtVersion;
    wxMenuItem* m_miRqtHeartbeat;
    wxMenuItem* m_miRqtConfig;
    wxMenuItem* m_miRqtPins;
    wxMenuItem* m_menuItem46971;
    wxMenuItem* m_menuItemInfoMessage;
    wxMenuItem* m_menuItemWarningMessage;
    wxMenuItem* m_menuItemErrorMessage;
    wxMenuItem* m_menuItem1187;
    wxMenuItem* m_miMotorEnableState;
    wxMenuItem* m_menuItem881;
    wxMenuItem* m_miRqtCurPos;
    wxMenuItem* m_miRqtLimit;
    wxMenuItem* m_menuItem1183;
    wxMenuItem* m_miRqtReset;
    wxMenuItem* m_menuItem11831;
    wxMenuItem* m_miRqtSendInterrupt;
    wxMenuItem* m_menuItem118311;
    wxMenuItem* m_miRqtWarmstart;
    wxMenu* m_menuTools;
    wxMenuItem* m_miIniFile;
    wxMenuItem* m_miExternalEditor;
    wxMenuItem* m_miCalculator;
    wxMenuItem* m_miPyCam;
    wxMenuItem* m_menuItem7460;
    wxMenuItem* m_miGameportController;
    wxMenu* m_menuTest;
    wxMenuItem* m_miUnitTestFramework;
    wxMenuItem* m_menuItem3361;
    wxMenuItem* m_miLoopRepeatTest;
    wxMenuItem* m_menuItem4684;
    wxMenuItem* m_miTest1;
    wxMenuItem* m_miTest2;
    wxMenuItem* m_miTest3;
    wxMenuItem* m_miTest4;
    wxMenu* m_menuAbout;
    wxMenuItem* m_miTraceSessionID;
    wxMenuItem* m_miOpenSessionDlg;
    wxMenuItem* m_miShowStacktraceFile;
    wxMenuItem* m_menuItem59616;
    wxMenuItem* m_miShowAppEnv;
    wxMenuItem* m_menuItem5961;
    wxMenuItem* m_miAbout;
    wxTimer* m_startupTimer;
    wxTimer* m_serialTimer;
    wxTimer* m_traceTimer;

protected:
    virtual void activateMainWindow(wxActivateEvent& event) { event.Skip(); }
    virtual void closeAuiPane(wxAuiManagerEvent& event) { event.Skip(); }
    virtual void maximizeAuiPane(wxAuiManagerEvent& event) { event.Skip(); }
    virtual void restoreAuiPane(wxAuiManagerEvent& event) { event.Skip(); }
    virtual void renderAuiPane(wxAuiManagerEvent& event) { event.Skip(); }
    virtual void buttonAuiPane(wxAuiManagerEvent& event) { event.Skip(); }
    virtual void activateAuiPane(wxAuiManagerEvent& event) { event.Skip(); }
    virtual void toggleTemplateManager(wxCommandEvent& event) { event.Skip(); }
    virtual void searchAvailiablePorts(wxCommandEvent& event) { event.Skip(); }
    virtual void selectPort(wxCommandEvent& event) { event.Skip(); }
    virtual void connect(wxCommandEvent& event) { event.Skip(); }
    virtual void setReferencePosition(wxCommandEvent& event) { event.Skip(); }
    virtual void onSelectSetup(wxCommandEvent& event) { event.Skip(); }
    virtual void onSelectReferences(wxCommandEvent& event) { event.Skip(); }
    virtual void onSelectManuallyMove(wxCommandEvent& event) { event.Skip(); }
    virtual void onSelectTemplate(wxCommandEvent& event) { event.Skip(); }
    virtual void onSelectTestPage(wxCommandEvent& event) { event.Skip(); }
    virtual void onSelectInboundPreview(wxCommandEvent& event) { event.Skip(); }
    virtual void onSelectCncMonitor(wxCommandEvent& event) { event.Skip(); }
    virtual void onSelectTemplatePreview(wxCommandEvent& event) { event.Skip(); }
    virtual void cfgStepDelayDropDown(wxAuiToolBarEvent& event) { event.Skip(); }
    virtual void cfgStepDelayMin(wxCommandEvent& event) { event.Skip(); }
    virtual void cfgStepDelayMax(wxCommandEvent& event) { event.Skip(); }
    virtual void cfgStepDelayArduino(wxCommandEvent& event) { event.Skip(); }
    virtual void stepDelayChanged(wxScrollEvent& event) { event.Skip(); }
    virtual void stepDelayThumbtrack(wxScrollEvent& event) { event.Skip(); }
    virtual void updateRenderResolution(wxCommandEvent& event) { event.Skip(); }
    virtual void rcReset(wxCommandEvent& event) { event.Skip(); }
    virtual void clickProbeMode(wxCommandEvent& event) { event.Skip(); }
    virtual void clickSpeedControl(wxCommandEvent& event) { event.Skip(); }
    virtual void rcDebugConfig(wxCommandEvent& event) { event.Skip(); }
    virtual void rcDebug(wxCommandEvent& event) { event.Skip(); }
    virtual void rcNextBreakpoint(wxCommandEvent& event) { event.Skip(); }
    virtual void rcNextStep(wxCommandEvent& event) { event.Skip(); }
    virtual void rcFinish(wxCommandEvent& event) { event.Skip(); }
    virtual void rcSecureDlg(wxCommandEvent& event) { event.Skip(); }
    virtual void rcRun(wxCommandEvent& event) { event.Skip(); }
    virtual void rcPause(wxCommandEvent& event) { event.Skip(); }
    virtual void rcStop(wxCommandEvent& event) { event.Skip(); }
    virtual void emergencyStop(wxCommandEvent& event) { event.Skip(); }
    virtual void mainViewSelectorSelected(wxCommandEvent& event) { event.Skip(); }
    virtual void cncMainViewChanged(wxNotebookEvent& event) { event.Skip(); }
    virtual void openTemplateSourceExtern(wxCommandEvent& event) { event.Skip(); }
    virtual void openTemplateSvgExtern(wxCommandEvent& event) { event.Skip(); }
    virtual void saveTemplateFromButton(wxCommandEvent& event) { event.Skip(); }
    virtual void reloadTemplateFromButton(wxCommandEvent& event) { event.Skip(); }
    virtual void renameTemplateFromButton(wxCommandEvent& event) { event.Skip(); }
    virtual void removeTemplateFromButton(wxCommandEvent& event) { event.Skip(); }
    virtual void toggleTemplateWordWrapMode(wxCommandEvent& event) { event.Skip(); }
    virtual void toogleSvgEditSearchFlag(wxCommandEvent& event) { event.Skip(); }
    virtual void svgEditSearchTextChanged(wxCommandEvent& event) { event.Skip(); }
    virtual void svgEditSelected(wxCommandEvent& event) { event.Skip(); }
    virtual void svgEditFind(wxCommandEvent& event) { event.Skip(); }
    virtual void svgEditFindPrev(wxCommandEvent& event) { event.Skip(); }
    virtual void selectBinaryEditorViewMode(wxCommandEvent& event) { event.Skip(); }
    virtual void extractSourceAsNewTpl(wxCommandEvent& event) { event.Skip(); }
    virtual void selectUAInboundPathList(wxDataViewEvent& event) { event.Skip(); }
    virtual void selectUAUseDirectiveList(wxDataViewEvent& event) { event.Skip(); }
    virtual void selectUADetailInfo(wxDataViewEvent& event) { event.Skip(); }
    virtual void loadConfiguration(wxCommandEvent& event) { event.Skip(); }
    virtual void saveConfiguration(wxCommandEvent& event) { event.Skip(); }
    virtual void changeConfigToolbook(wxToolbookEvent& event) { event.Skip(); }
    virtual void setupGridChanged(wxPropertyGridEvent& event) { event.Skip(); }
    virtual void setupGridChanging(wxPropertyGridEvent& event) { event.Skip(); }
    virtual void setupGridSelected(wxPropertyGridEvent& event) { event.Skip(); }
    virtual void setupGridCommandButton(wxCommandEvent& event) { event.Skip(); }
    virtual void changeSpeedConfigSlider(wxScrollEvent& event) { event.Skip(); }
    virtual void updatedSpeedConfigSteps(wxCommandEvent& event) { event.Skip(); }
    virtual void updatedSpeedConfigAccelAxis(wxCommandEvent& event) { event.Skip(); }
    virtual void moveHome(wxCommandEvent& event) { event.Skip(); }
    virtual void moveToZeroXY(wxCommandEvent& event) { event.Skip(); }
    virtual void moveToZeroXYZ(wxCommandEvent& event) { event.Skip(); }
    virtual void moveToZeroZ(wxCommandEvent& event) { event.Skip(); }
    virtual void moveXToMax(wxCommandEvent& event) { event.Skip(); }
    virtual void moveXToMid(wxCommandEvent& event) { event.Skip(); }
    virtual void moveXToMin(wxCommandEvent& event) { event.Skip(); }
    virtual void moveYToMax(wxCommandEvent& event) { event.Skip(); }
    virtual void moveYToMid(wxCommandEvent& event) { event.Skip(); }
    virtual void moveYToMin(wxCommandEvent& event) { event.Skip(); }
    virtual void moveZToMax(wxCommandEvent& event) { event.Skip(); }
    virtual void moveZToMid(wxCommandEvent& event) { event.Skip(); }
    virtual void moveZToMin(wxCommandEvent& event) { event.Skip(); }
    virtual void moveZToTop(wxCommandEvent& event) { event.Skip(); }
    virtual void moveZToBottom(wxCommandEvent& event) { event.Skip(); }
    virtual void changeManuallySpeedSlider(wxScrollEvent& event) { event.Skip(); }
    virtual void minManuallyXSlider(wxCommandEvent& event) { event.Skip(); }
    virtual void updateMetricX(wxCommandEvent& event) { event.Skip(); }
    virtual void maxManuallyXSlider(wxCommandEvent& event) { event.Skip(); }
    virtual void zeroManuallyXSlider(wxCommandEvent& event) { event.Skip(); }
    virtual void signManuallyXSlider(wxCommandEvent& event) { event.Skip(); }
    virtual void moveManuallySliderX(wxScrollEvent& event) { event.Skip(); }
    virtual void changeManuallySliderX(wxScrollEvent& event) { event.Skip(); }
    virtual void minManuallyYSlider(wxCommandEvent& event) { event.Skip(); }
    virtual void updateMetricY(wxCommandEvent& event) { event.Skip(); }
    virtual void maxManuallyYSlider(wxCommandEvent& event) { event.Skip(); }
    virtual void zeroManuallyYSlider(wxCommandEvent& event) { event.Skip(); }
    virtual void signManuallyYSlider(wxCommandEvent& event) { event.Skip(); }
    virtual void moveManuallySliderY(wxScrollEvent& event) { event.Skip(); }
    virtual void changeManuallySliderY(wxScrollEvent& event) { event.Skip(); }
    virtual void minManuallyZSlider(wxCommandEvent& event) { event.Skip(); }
    virtual void updateMetricZ(wxCommandEvent& event) { event.Skip(); }
    virtual void maxManuallyZSlider(wxCommandEvent& event) { event.Skip(); }
    virtual void zeroManuallyZSlider(wxCommandEvent& event) { event.Skip(); }
    virtual void signManuallyZSlider(wxCommandEvent& event) { event.Skip(); }
    virtual void moveManuallySliderZ(wxScrollEvent& event) { event.Skip(); }
    virtual void changeManuallySliderZ(wxScrollEvent& event) { event.Skip(); }
    virtual void testCaseBookChanged(wxListbookEvent& event) { event.Skip(); }
    virtual void selectTestIntervalMode(wxCommandEvent& event) { event.Skip(); }
    virtual void testCountXSpinCtl(wxSpinEvent& event) { event.Skip(); }
    virtual void testCountXUpdated(wxCommandEvent& event) { event.Skip(); }
    virtual void testDimTakeOverX(wxCommandEvent& event) { event.Skip(); }
    virtual void testDimTakeOverY(wxCommandEvent& event) { event.Skip(); }
    virtual void testDimTakeOverZ(wxCommandEvent& event) { event.Skip(); }
    virtual void testDimTakeOverAll(wxCommandEvent& event) { event.Skip(); }
    virtual void testEndSwitchEvaluation(wxCommandEvent& event) { event.Skip(); }
    virtual void testSwitchToolOnOff(wxCommandEvent& event) { event.Skip(); }
    virtual void monitorViewSelectorSelected(wxCommandEvent& event) { event.Skip(); }
    virtual void outboundBookChanged(wxNotebookEvent& event) { event.Skip(); }
    virtual void outboundBookChanging(wxNotebookEvent& event) { event.Skip(); }
    virtual void nootebookConfigChanged(wxListbookEvent& event) { event.Skip(); }
    virtual void cancelRun(wxCommandEvent& event) { event.Skip(); }
    virtual void confirmRun(wxCommandEvent& event) { event.Skip(); }
    virtual void clearSetterList(wxCommandEvent& event) { event.Skip(); }
    virtual void refreshSetterList(wxCommandEvent& event) { event.Skip(); }
    virtual void requestControllerConfigFromButton(wxCommandEvent& event) { event.Skip(); }
    virtual void requestControllerPinsFromButton(wxCommandEvent& event) { event.Skip(); }
    virtual void clearControllerMsgHistory(wxCommandEvent& event) { event.Skip(); }
    virtual void saveOutboundAsNewTplFromButton(wxCommandEvent& event) { event.Skip(); }
    virtual void motionMonitorOrigin(wxCommandEvent& event) { event.Skip(); }
    virtual void motionMonitorRuler(wxCommandEvent& event) { event.Skip(); }
    virtual void motionMonitorHelpLines(wxCommandEvent& event) { event.Skip(); }
    virtual void motionMonitorBoundBox(wxCommandEvent& event) { event.Skip(); }
    virtual void motionMonitorPostionMarker(wxCommandEvent& event) { event.Skip(); }
    virtual void motionMonitorFlyPath(wxCommandEvent& event) { event.Skip(); }
    virtual void switchMonitoring(wxCommandEvent& event) { event.Skip(); }
    virtual void refreshMotionMonitor(wxCommandEvent& event) { event.Skip(); }
    virtual void clearMotionMonitor(wxCommandEvent& event) { event.Skip(); }
    virtual void displayIntervalThumbtrack(wxScrollEvent& event) { event.Skip(); }
    virtual void displayIntervalChanged(wxScrollEvent& event) { event.Skip(); }
    virtual void displayIntervalKeyDown(wxKeyEvent& event) { event.Skip(); }
    virtual void toggleMotionMonitorStatisticPane(wxCommandEvent& event) { event.Skip(); }
    virtual void toggleMotionMonitorReplayPane(wxCommandEvent& event) { event.Skip(); }
    virtual void dclickDurationCount(wxMouseEvent& event) { event.Skip(); }
    virtual void toggleMotionMonitorOptionPane(wxCommandEvent& event) { event.Skip(); }
    virtual void showFromTop3D(wxCommandEvent& event) { event.Skip(); }
    virtual void showFromBottom3D(wxCommandEvent& event) { event.Skip(); }
    virtual void showFromFront3D(wxCommandEvent& event) { event.Skip(); }
    virtual void showFromRear3D(wxCommandEvent& event) { event.Skip(); }
    virtual void showFromLeft3D(wxCommandEvent& event) { event.Skip(); }
    virtual void showFromRight3D(wxCommandEvent& event) { event.Skip(); }
    virtual void show3D(wxCommandEvent& event) { event.Skip(); }
    virtual void toggleOutboundEditorWordWrap(wxCommandEvent& event) { event.Skip(); }
    virtual void lruListItemSelected(wxListEvent& event) { event.Skip(); }
    virtual void lruListItemActivated(wxListEvent& event) { event.Skip(); }
    virtual void lruListItemLeave(wxMouseEvent& event) { event.Skip(); }
    virtual void keyDownLruList(wxKeyEvent& event) { event.Skip(); }
    virtual void updateLogger(wxCommandEvent& event) { event.Skip(); }
    virtual void keyDownLogger(wxKeyEvent& event) { event.Skip(); }
    virtual void dclickLogger(wxMouseEvent& event) { event.Skip(); }
    virtual void clearLogger(wxCommandEvent& event) { event.Skip(); }
    virtual void copyLogger(wxCommandEvent& event) { event.Skip(); }
    virtual void dclickUpdateManagerThreadSymbol(wxMouseEvent& event) { event.Skip(); }
    virtual void traceTextUpdated(wxCommandEvent& event) { event.Skip(); }
    virtual void dclickHeartbeatState(wxMouseEvent& event) { event.Skip(); }
    virtual void selectUnit(wxCommandEvent& event) { event.Skip(); }
    virtual void selectUCUnitFrom(wxCommandEvent& event) { event.Skip(); }
    virtual void selectUCUnitTo(wxCommandEvent& event) { event.Skip(); }
    virtual void selectUCChangeFrom(wxCommandEvent& event) { event.Skip(); }
    virtual void selectMetricUnitFrom(wxCommandEvent& event) { event.Skip(); }
    virtual void selectMetricUnitFromValue(wxCommandEvent& event) { event.Skip(); }
    virtual void selectMetricUnitTo(wxCommandEvent& event) { event.Skip(); }
    virtual void closeUnitCalculator(wxCommandEvent& event) { event.Skip(); }
    virtual void leaveSerialSpy(wxMouseEvent& event) { event.Skip(); }
    virtual void leaveSerialSpy(wxMouseCaptureLostEvent& event) { event.Skip(); }
    virtual void enableSerialSpy(wxCommandEvent& event) { event.Skip(); }
    virtual void markSerialSpy(wxCommandEvent& event) { event.Skip(); }
    virtual void clearSerialSpy(wxCommandEvent& event) { event.Skip(); }
    virtual void selectSerialSpyMode(wxCommandEvent& event) { event.Skip(); }
    virtual void onSelectSpyUnknownDetails(wxDataViewEvent& event) { event.Skip(); }
    virtual void openSpyDetailWindow(wxCommandEvent& event) { event.Skip(); }
    virtual void onSelectSpyInboundDetails(wxDataViewEvent& event) { event.Skip(); }
    virtual void onSelectSpyOutboundDetails(wxDataViewEvent& event) { event.Skip(); }
    virtual void togglePositionSpy(wxCommandEvent& event) { event.Skip(); }
    virtual void copyPositionSpy(wxCommandEvent& event) { event.Skip(); }
    virtual void searchPosSpy(wxCommandEvent& event) { event.Skip(); }
    virtual void clearPositionSpy(wxCommandEvent& event) { event.Skip(); }
    virtual void selectPositionSpyContent(wxCommandEvent& event) { event.Skip(); }
    virtual void goPosSypFirstId(wxCommandEvent& event) { event.Skip(); }
    virtual void goPosSypLastId(wxCommandEvent& event) { event.Skip(); }
    virtual void goPosSypPrevId(wxCommandEvent& event) { event.Skip(); }
    virtual void goPosSypNextId(wxCommandEvent& event) { event.Skip(); }
    virtual void onPaintSpeedPanel(wxPaintEvent& event) { event.Skip(); }
    virtual void newTemplate(wxCommandEvent& event) { event.Skip(); }
    virtual void openTemplate(wxCommandEvent& event) { event.Skip(); }
    virtual void reloadTemplate(wxCommandEvent& event) { event.Skip(); }
    virtual void saveTemplate(wxCommandEvent& event) { event.Skip(); }
    virtual void saveTemplateAs(wxCommandEvent& event) { event.Skip(); }
    virtual void saveOutboundAsNewTplFromMenu(wxCommandEvent& event) { event.Skip(); }
    virtual void OnExit(wxCommandEvent& event) { event.Skip(); }
    virtual void viewToolbar(wxCommandEvent& event) { event.Skip(); }
    virtual void viewStatusbar(wxCommandEvent& event) { event.Skip(); }
    virtual void viewTemplateManager(wxCommandEvent& event) { event.Skip(); }
    virtual void viewMainView(wxCommandEvent& event) { event.Skip(); }
    virtual void viewMonitor(wxCommandEvent& event) { event.Skip(); }
    virtual void viewZAxis(wxCommandEvent& event) { event.Skip(); }
    virtual void viewPosistionMonitor(wxCommandEvent& event) { event.Skip(); }
    virtual void viewDebugger(wxCommandEvent& event) { event.Skip(); }
    virtual void viewSpy(wxCommandEvent& event) { event.Skip(); }
    virtual void viewLogger(wxCommandEvent& event) { event.Skip(); }
    virtual void viewUnitCalculator(wxCommandEvent& event) { event.Skip(); }
    virtual void viewAllAuiPanes(wxCommandEvent& event) { event.Skip(); }
    virtual void hideAllAuiPanes(wxCommandEvent& event) { event.Skip(); }
    virtual void loadPerspective(wxCommandEvent& event) { event.Skip(); }
    virtual void savePerspective(wxCommandEvent& event) { event.Skip(); }
    virtual void addUserPerspective(wxCommandEvent& event) { event.Skip(); }
    virtual void renameUserPerspective(wxCommandEvent& event) { event.Skip(); }
    virtual void removeUserPerspective(wxCommandEvent& event) { event.Skip(); }
    virtual void defineUpdateCoordinates(wxCommandEvent& event) { event.Skip(); }
    virtual void defineOnlineDrawing(wxCommandEvent& event) { event.Skip(); }
    virtual void defineAllowEvents(wxCommandEvent& event) { event.Skip(); }
    virtual void displayUserAgent(wxCommandEvent& event) { event.Skip(); }
    virtual void updateToolControls(wxCommandEvent& event) { event.Skip(); }
    virtual void defineDebugSerial(wxCommandEvent& event) { event.Skip(); }
    virtual void defineMinMonitoring(wxCommandEvent& event) { event.Skip(); }
    virtual void defineNormalMonitoring(wxCommandEvent& event) { event.Skip(); }
    virtual void toggleIdleRequests(wxCommandEvent& event) { event.Skip(); }
    virtual void requestVersion(wxCommandEvent& event) { event.Skip(); }
    virtual void requestHeartbeat(wxCommandEvent& event) { event.Skip(); }
    virtual void requestConfig(wxCommandEvent& event) { event.Skip(); }
    virtual void requestPins(wxCommandEvent& event) { event.Skip(); }
    virtual void requestInfoMessage(wxCommandEvent& event) { event.Skip(); }
    virtual void requestWarningMessage(wxCommandEvent& event) { event.Skip(); }
    virtual void requestErrorMessage(wxCommandEvent& event) { event.Skip(); }
    virtual void requestEnableStepperMotors(wxCommandEvent& event) { event.Skip(); }
    virtual void requestCurrentPos(wxCommandEvent& event) { event.Skip(); }
    virtual void requestCurrentLimitState(wxCommandEvent& event) { event.Skip(); }
    virtual void requestReset(wxCommandEvent& event) { event.Skip(); }
    virtual void requestInterrupt(wxCommandEvent& event) { event.Skip(); }
    virtual void warmStartController(wxCommandEvent& event) { event.Skip(); }
    virtual void openConfigurationFile(wxCommandEvent& event) { event.Skip(); }
    virtual void openExternalEditor(wxCommandEvent& event) { event.Skip(); }
    virtual void openCalculator(wxCommandEvent& event) { event.Skip(); }
    virtual void openPyCam(wxCommandEvent& event) { event.Skip(); }
    virtual void openGameportController(wxCommandEvent& event) { event.Skip(); }
    virtual void unitTestFramework(wxCommandEvent& event) { event.Skip(); }
    virtual void loopRepeatTest(wxCommandEvent& event) { event.Skip(); }
    virtual void testFunction1(wxCommandEvent& event) { event.Skip(); }
    virtual void testFunction2(wxCommandEvent& event) { event.Skip(); }
    virtual void testFunction3(wxCommandEvent& event) { event.Skip(); }
    virtual void testFunction4(wxCommandEvent& event) { event.Skip(); }
    virtual void traceSessionId(wxCommandEvent& event) { event.Skip(); }
    virtual void openSessionDialog(wxCommandEvent& event) { event.Skip(); }
    virtual void showStacktraceStore(wxCommandEvent& event) { event.Skip(); }
    virtual void showOSEnvironment(wxCommandEvent& event) { event.Skip(); }
    virtual void OnAbout(wxCommandEvent& event) { event.Skip(); }
    virtual void startupTimer(wxTimerEvent& event) { event.Skip(); }
    virtual void serialTimer(wxTimerEvent& event) { event.Skip(); }
    virtual void traceTimer(wxTimerEvent& event) { event.Skip(); }

public:
    wxBitmapButton* GetBmpButton4490() { return m_bmpButton4490; }
    wxStaticText* GetStaticText1842() { return m_staticText1842; }
    wxBitmapButton* GetSearchConnections() { return m_searchConnections; }
    wxBitmapComboBox* GetPortSelector() { return m_portSelector; }
    wxBitmapButton* GetConnect() { return m_connect; }
    wxBitmapButton* GetRefPosition() { return m_refPosition; }
    wxBitmapButton* GetBtSelectSetup() { return m_btSelectSetup; }
    wxBitmapButton* GetBtSelectReferences() { return m_btSelectReferences; }
    wxBitmapButton* GetBtSelectManuallyMove() { return m_btSelectManuallyMove; }
    wxBitmapButton* GetBtSelectTemplate() { return m_btSelectTemplate; }
    wxBitmapButton* GetBtSelectInboundTest() { return m_btSelectInboundTest; }
    wxBitmapButton* GetBtSelectInboundPreview() { return m_btSelectInboundPreview; }
    wxBitmapButton* GetBtSelectCncPreview() { return m_btSelectCncPreview; }
    wxBitmapButton* GetBtSelectTemplatePreview() { return m_btSelectTemplatePreview; }
    wxSlider* GetStepDelay() { return m_stepDelay; }
    wxStaticText* GetStepDelayValue() { return m_stepDelayValue; }
    wxStaticText* GetStaticText16032() { return m_staticText16032; }
    wxComboBox* GetCbRenderResolution() { return m_cbRenderResolution; }
    wxBitmapButton* GetRcReset() { return m_rcReset; }
    wxBitmapToggleButton* GetBtProbeMode() { return m_btProbeMode; }
    wxBitmapToggleButton* GetBtSpeedControl() { return m_btSpeedControl; }
    wxBitmapButton* GetRcDebugConfig() { return m_rcDebugConfig; }
    wxBitmapButton* GetRcDebug() { return m_rcDebug; }
    wxBitmapButton* GetRcNextBreakpoint() { return m_rcNextBreakpoint; }
    wxBitmapButton* GetRcNextStep() { return m_rcNextStep; }
    wxBitmapButton* GetRcFinish() { return m_rcFinish; }
    wxBitmapButton* GetRcSecureDlg() { return m_rcSecureDlg; }
    wxBitmapButton* GetRcRun() { return m_rcRun; }
    wxBitmapButton* GetRcPause() { return m_rcPause; }
    wxBitmapButton* GetRcStop() { return m_rcStop; }
    wxButton* GetBtnEmergenyStop() { return m_btnEmergenyStop; }

    virtual void ShowAuiToolMenu(wxAuiToolBarEvent& event);
    wxAuiToolBar* GetAuibarMain() { return m_auibarMain; }
    wxChoice* GetMainViewSelector() { return m_mainViewSelector; }
    wxButton* GetOpenSourceExtern() { return m_openSourceExtern; }
    wxButton* GetOpenSvgExtern() { return m_openSvgExtern; }
    wxStaticLine* GetStaticLine44728() { return m_staticLine44728; }
    wxButton* GetSaveTemplate() { return m_saveTemplate; }
    wxButton* GetReloadTemplate() { return m_reloadTemplate; }
    wxButton* GetRenameTemplate() { return m_renameTemplate; }
    wxButton* GetRemoveTemplate() { return m_removeTemplate; }
    wxStaticLine* GetStaticLine4472() { return m_staticLine4472; }
    wxBitmapToggleButton* GetBtSvgToggleWordWrap() { return m_btSvgToggleWordWrap; }
    wxPanel* GetPanelTemplateObserverPlaceholder() { return m_panelTemplateObserverPlaceholder; }
    wxPanel* GetPanelTplObserver() { return m_panelTplObserver; }
    wxBitmapToggleButton* GetTbCaseSensitive() { return m_tbCaseSensitive; }
    wxBitmapToggleButton* GetTbWholeWord() { return m_tbWholeWord; }
    wxBitmapToggleButton* GetTbRegEx() { return m_tbRegEx; }
    wxBitmapToggleButton* GetTbHighLight() { return m_tbHighLight; }
    wxStaticBitmap* GetSourceEditSearchState() { return m_sourceEditSearchState; }
    wxComboBox* GetSourceEditSearch() { return m_sourceEditSearch; }
    wxButton* GetSvgEditFind() { return m_svgEditFind; }
    wxButton* GetSvgEditFindPrev() { return m_svgEditFindPrev; }
    wxPanel* GetPanelToolBoxSvg() { return m_panelToolBoxSvg; }
    wxPanel* GetPanelToolBoxGcode() { return m_panelToolBoxGcode; }
    wxStaticText* GetStaticText6074() { return m_staticText6074; }
    wxComboBox* GetCbBinaryViewMode() { return m_cbBinaryViewMode; }
    wxButton* GetBtExtractSourceAsNewTpl() { return m_btExtractSourceAsNewTpl; }
    wxPanel* GetPanelToolBoxBinary() { return m_panelToolBoxBinary; }
    wxSimplebook* GetEditorToolBox() { return m_editorToolBox; }
    wxStyledTextCtrl* GetStcFileContent() { return m_stcFileContent; }
    wxStaticText* GetFilePosition() { return m_filePosition; }
    wxTextCtrl* GetSourceEditStatus() { return m_sourceEditStatus; }
    wxStaticText* GetEditMode() { return m_editMode; }
    wxPanel* GetPanelTplEdit() { return m_panelTplEdit; }
    wxStaticText* GetStaticText6112() { return m_staticText6112; }
    wxPanel* GetPanelTplNull() { return m_panelTplNull; }
    wxTextCtrl* GetSvgRootNode() { return m_svgRootNode; }
    wxStaticText* GetStaticText1498() { return m_staticText1498; }
    wxDataViewListCtrl* GetDvListCtrlSvgUAInboundPathList() { return m_dvListCtrlSvgUAInboundPathList; }
    wxStaticText* GetStaticText14983() { return m_staticText14983; }
    wxDataViewListCtrl* GetDvListCtrlSvgUAUseDirective() { return m_dvListCtrlSvgUAUseDirective; }
    wxStaticText* GetStaticText1500() { return m_staticText1500; }
    wxDataViewListCtrl* GetDvListCtrlSvgUADetailInfo() { return m_dvListCtrlSvgUADetailInfo; }
    wxTextCtrl* GetSelectedUAInfo() { return m_selectedUAInfo; }
    wxPanel* GetPanelTplUserAgent() { return m_panelTplUserAgent; }
    wxStaticText* GetStaticText7796() { return m_staticText7796; }
    wxPanel* GetGCodeSequenceListPlaceholder() { return m_gCodeSequenceListPlaceholder; }
    wxPanel* GetPanelTplGCodeSequence() { return m_panelTplGCodeSequence; }
    wxTextCtrl* GetNestedDataHeader() { return m_nestedDataHeader; }
    wxPanel* GetSplitterPage6086() { return m_splitterPage6086; }
    wxTextCtrl* GetNestedSource() { return m_nestedSource; }
    wxPanel* GetSplitterPage6090() { return m_splitterPage6090; }
    wxSplitterWindow* GetSplitter6082() { return m_splitter6082; }
    wxPanel* GetPanelTplNestedInfo() { return m_panelTplNestedInfo; }
    wxSimplebook* GetSimpleBookSourceExt() { return m_simpleBookSourceExt; }
    wxPanel* GetPanelTplSourceExt() { return m_panelTplSourceExt; }
    wxNotebook* GetTemplateNotebook() { return m_templateNotebook; }
    wxPanel* GetMainBookSourcePanel() { return m_mainBookSourcePanel; }
    wxStaticText* GetStaticText5137() { return m_staticText5137; }
    wxButton* GetLoadConfiguration() { return m_loadConfiguration; }
    wxButton* GetSaveConfiguration() { return m_saveConfiguration; }
    wxPanel* GetPanel5618() { return m_panel5618; }
    wxPanel* GetPanel5620() { return m_panel5620; }
    wxPanel* GetPanel5610() { return m_panel5610; }
    wxPanel* GetPanel5612() { return m_panel5612; }
    wxPanel* GetPanel5614() { return m_panel5614; }
    wxPanel* GetPanel5616() { return m_panel5616; }
    wxToolbook* GetConfigurationToolbook() { return m_configurationToolbook; }
    wxPropertyGridManager* GetPgMgrSetup() { return m_pgMgrSetup; }
    wxPanel* GetSetupConfigPage() { return m_setupConfigPage; }
    wxPanel* GetToolMagazinePlaceholder() { return m_toolMagazinePlaceholder; }
    wxPanel* GetSetupToolMagazine() { return m_setupToolMagazine; }
    wxStaticText* GetStaticText5677() { return m_staticText5677; }
    wxSlider* GetSpeedConfigSlider() { return m_speedConfigSlider; }
    wxStaticText* GetStaticText5709() { return m_staticText5709; }
    wxStaticText* GetStaticText5717() { return m_staticText5717; }
    wxTextCtrl* GetSpeedConfigStepsX() { return m_speedConfigStepsX; }
    wxStaticText* GetStaticText5719() { return m_staticText5719; }
    wxTextCtrl* GetSpeedConfigStepsY() { return m_speedConfigStepsY; }
    wxStaticText* GetStaticText5721() { return m_staticText5721; }
    wxTextCtrl* GetSpeedConfigStepsZ() { return m_speedConfigStepsZ; }
    wxStaticLine* GetStaticLine5781() { return m_staticLine5781; }
    wxStaticText* GetStaticText5777() { return m_staticText5777; }
    wxComboBox* GetSpeedConfigAccelAxis() { return m_speedConfigAccelAxis; }
    wxPanel* GetAccelGraphPanel() { return m_accelGraphPanel; }
    wxPanel* GetAccelGraphPanelMain() { return m_accelGraphPanelMain; }
    wxTextCtrl* GetSpeedConfigTrace() { return m_speedConfigTrace; }
    wxPanel* GetSplitterPage5767() { return m_splitterPage5767; }
    wxSplitterWindow* GetSplitter5759() { return m_splitter5759; }
    wxPanel* GetPanel5699() { return m_panel5699; }
    wxTextCtrl* GetAccelConfigTraceX() { return m_accelConfigTraceX; }
    wxTextCtrl* GetSpeedConfigTraceX() { return m_speedConfigTraceX; }
    wxPanel* GetPanelSpeedPgAxisX() { return m_panelSpeedPgAxisX; }
    wxTextCtrl* GetAccelConfigTraceY() { return m_accelConfigTraceY; }
    wxTextCtrl* GetSpeedConfigTraceY() { return m_speedConfigTraceY; }
    wxPanel* GetPanelSpeedPgAxisY() { return m_panelSpeedPgAxisY; }
    wxTextCtrl* GetAccelConfigTraceZ() { return m_accelConfigTraceZ; }
    wxTextCtrl* GetSpeedConfigTraceZ() { return m_speedConfigTraceZ; }
    wxPanel* GetPanelSpeedPgAxisZ() { return m_panelSpeedPgAxisZ; }
    wxNotebook* GetNotebook5687() { return m_notebook5687; }
    wxPanel* GetSetupSpeedWizard() { return m_setupSpeedWizard; }
    wxNotebook* GetNotebook4561() { return m_notebook4561; }
    wxPanel* GetMainBookSetup() { return m_mainBookSetup; }
    wxStaticText* GetStaticText779() { return m_staticText779; }
    wxStaticLine* GetStaticLine783() { return m_staticLine783; }
    wxStaticText* GetStaticText1171() { return m_staticText1171; }
    wxStaticText* GetStaticText1173() { return m_staticText1173; }
    wxComboBox* GetHomeDefintion() { return m_homeDefintion; }
    wxButton* GetMoveHome() { return m_moveHome; }
    wxStaticLine* GetStaticLine2177() { return m_staticLine2177; }
    wxStaticLine* GetStaticLine2179() { return m_staticLine2179; }
    wxStaticText* GetStaticText2182() { return m_staticText2182; }
    wxComboBox* GetZeroMoveModeXY() { return m_zeroMoveModeXY; }
    wxButton* GetMoveXYtoZero() { return m_moveXYtoZero; }
    wxStaticText* GetStaticText218228() { return m_staticText218228; }
    wxComboBox* GetZeroMoveModeXYZ() { return m_zeroMoveModeXYZ; }
    wxButton* GetMoveXYZtoZero() { return m_moveXYZtoZero; }
    wxStaticText* GetStaticText21822831() { return m_staticText21822831; }
    wxComboBox* GetZeroMoveModeZ() { return m_zeroMoveModeZ; }
    wxButton* GetMoveZtoZero() { return m_moveZtoZero; }
    wxStaticLine* GetStaticLine2191() { return m_staticLine2191; }
    wxStaticLine* GetStaticLine2193() { return m_staticLine2193; }
    wxStaticText* GetStaticText1177233() { return m_staticText1177233; }
    wxStaticText* GetStaticText11772() { return m_staticText11772; }
    wxButton* GetXToMax() { return m_xToMax; }
    wxButton* GetXToMid() { return m_xToMid; }
    wxButton* GetXToMin() { return m_xToMin; }
    wxButton* GetYToMax() { return m_yToMax; }
    wxButton* GetYToMid() { return m_yToMid; }
    wxButton* GetYToMin() { return m_yToMin; }
    wxStaticLine* GetStaticLine2195() { return m_staticLine2195; }
    wxStaticLine* GetStaticLine2197() { return m_staticLine2197; }
    wxStaticText* GetStaticText1175() { return m_staticText1175; }
    wxStaticText* GetStaticText1177() { return m_staticText1177; }
    wxButton* GetZToMax() { return m_zToMax; }
    wxButton* GetZToMid() { return m_zToMid; }
    wxButton* GetZToMin() { return m_zToMin; }
    wxButton* GetZToTop() { return m_zToTop; }
    wxStaticText* GetStaticText2438() { return m_staticText2438; }
    wxButton* GetZToBottom() { return m_zToBottom; }
    wxScrolledWindow* GetScrollWin7112() { return m_scrollWin7112; }
    wxPanel* GetPanel7172() { return m_panel7172; }
    wxPanel* GetPredefinedPositions() { return m_predefinedPositions; }
    wxPanel* GetNavigationPanelPlaceholder() { return m_navigationPanelPlaceholder; }
    wxStaticLine* GetStaticLine5550() { return m_staticLine5550; }
    wxStaticBitmap* GetStaticBitmap5901() { return m_staticBitmap5901; }
    wxStaticText* GetCbStepSensitivityText() { return m_cbStepSensitivityText; }
    wxRadioBox* GetRbStepSensitivity() { return m_rbStepSensitivity; }
    wxStaticLine* GetStaticLine5552() { return m_staticLine5552; }
    wxStaticBitmap* GetStaticBitmap5907() { return m_staticBitmap5907; }
    wxStaticText* GetStaticText5909() { return m_staticText5909; }
    wxPanel* GetNavigator() { return m_navigator; }
    wxListbook* GetListbook7170() { return m_listbook7170; }
    wxPanel* GetMainBookReference() { return m_mainBookReference; }
    wxStaticText* GetStaticText1160() { return m_staticText1160; }
    wxStaticLine* GetStaticLine1162() { return m_staticLine1162; }
    wxRadioBox* GetMmRadioCoordinates() { return m_mmRadioCoordinates; }
    wxStaticText* GetStaticText5101() { return m_staticText5101; }
    wxComboBox* GetManuallyToolId() { return m_manuallyToolId; }
    wxCheckBox* GetCheckBoxToolEnabled() { return m_checkBoxToolEnabled; }
    wxStaticText* GetStaticText5105() { return m_staticText5105; }
    wxSlider* GetManuallySpeedSlider() { return m_manuallySpeedSlider; }
    wxTextCtrl* GetManuallySpeedValue() { return m_manuallySpeedValue; }
    wxStaticText* GetStaticText5113() { return m_staticText5113; }
    wxStaticLine* GetStaticLine5729() { return m_staticLine5729; }
    wxCheckBox* GetManuallyCorrectLimitPos() { return m_manuallyCorrectLimitPos; }
    wxStaticLine* GetStaticLine5109() { return m_staticLine5109; }
    wxStaticText* GetStaticText793() { return m_staticText793; }
    wxButton* GetMinManuallyXSlider() { return m_minManuallyXSlider; }
    wxTextCtrl* GetMetricX() { return m_metricX; }
    wxButton* GetMaxManuallyXSlider() { return m_maxManuallyXSlider; }
    wxButton* GetZeroManuallyXSlider() { return m_zeroManuallyXSlider; }
    wxButton* GetSignManuallyXSlider() { return m_signManuallyXSlider; }
    wxStaticText* GetMmUnitX() { return m_mmUnitX; }
    wxSlider* GetXManuallySlider() { return m_xManuallySlider; }
    wxStaticLine* GetStaticLine5129() { return m_staticLine5129; }
    wxStaticText* GetStaticText797() { return m_staticText797; }
    wxButton* GetMinManuallyYSlider() { return m_minManuallyYSlider; }
    wxTextCtrl* GetMetricY() { return m_metricY; }
    wxButton* GetMaxManuallyYSlider() { return m_maxManuallyYSlider; }
    wxButton* GetZeroManuallyYSlider() { return m_zeroManuallyYSlider; }
    wxButton* GetSignManuallyYSlider() { return m_signManuallyYSlider; }
    wxStaticText* GetMmUnitY() { return m_mmUnitY; }
    wxSlider* GetYManuallySlider() { return m_yManuallySlider; }
    wxStaticLine* GetStaticLine5133() { return m_staticLine5133; }
    wxStaticText* GetStaticText7973() { return m_staticText7973; }
    wxButton* GetMinManuallyZSlider() { return m_minManuallyZSlider; }
    wxTextCtrl* GetMetricZ() { return m_metricZ; }
    wxButton* GetMaxManuallyZSlider() { return m_maxManuallyZSlider; }
    wxButton* GetZeroManuallyZSlider() { return m_zeroManuallyZSlider; }
    wxButton* GetSignManuallyZSlider() { return m_signManuallyZSlider; }
    wxStaticText* GetMmUnitZ() { return m_mmUnitZ; }
    wxSlider* GetZManuallySlider() { return m_zManuallySlider; }
    wxStaticLine* GetStaticLine5135() { return m_staticLine5135; }
    wxPanel* GetMainBookManual() { return m_mainBookManual; }
    wxStaticText* GetStaticText2117() { return m_staticText2117; }
    wxStaticLine* GetStaticLine2253() { return m_staticLine2253; }
    wxComboBox* GetTestIntervalMode() { return m_testIntervalMode; }
    wxStaticText* GetStaticText2105() { return m_staticText2105; }
    wxStaticText* GetStaticText2107() { return m_staticText2107; }
    wxStaticText* GetStaticText2109() { return m_staticText2109; }
    wxStaticText* GetStaticText2149() { return m_staticText2149; }
    wxStaticText* GetStaticText2115() { return m_staticText2115; }
    wxStaticText* GetStaticText2165() { return m_staticText2165; }
    wxStaticLine* GetStaticLine2111() { return m_staticLine2111; }
    wxStaticText* GetTestAxisX() { return m_testAxisX; }
    wxSpinCtrl* GetTestCountX() { return m_testCountX; }
    wxTextCtrl* GetTestDistanceX() { return m_testDistanceX; }
    wxStaticText* GetStaticText2101() { return m_staticText2101; }
    wxComboBox* GetTestFirstX() { return m_testFirstX; }
    wxStaticText* GetStaticText2151() { return m_staticText2151; }
    wxCheckBox* GetTestModeX() { return m_testModeX; }
    wxStaticText* GetTestDurationCounterX() { return m_testDurationCounterX; }
    wxStaticText* GetTestAxisY() { return m_testAxisY; }
    wxSpinCtrl* GetTestCountY() { return m_testCountY; }
    wxTextCtrl* GetTestDistanceY() { return m_testDistanceY; }
    wxStaticText* GetStaticText210115() { return m_staticText210115; }
    wxComboBox* GetTestFirstY() { return m_testFirstY; }
    wxStaticText* GetStaticText215123() { return m_staticText215123; }
    wxCheckBox* GetTestModeY() { return m_testModeY; }
    wxStaticText* GetTestDurationCounterY() { return m_testDurationCounterY; }
    wxStaticText* GetTestAxisZ() { return m_testAxisZ; }
    wxSpinCtrl* GetTestCountZ() { return m_testCountZ; }
    wxTextCtrl* GetTestDistanceZ() { return m_testDistanceZ; }
    wxStaticText* GetStaticText21011521() { return m_staticText21011521; }
    wxComboBox* GetTestFirstZ() { return m_testFirstZ; }
    wxStaticText* GetStaticText215124() { return m_staticText215124; }
    wxCheckBox* GetTestModeZ() { return m_testModeZ; }
    wxStaticText* GetTestDurationCounterZ() { return m_testDurationCounterZ; }
    wxPanel* GetTestIntervalPage() { return m_testIntervalPage; }
    wxStaticText* GetStaticText21174() { return m_staticText21174; }
    wxStaticLine* GetStaticLine22535() { return m_staticLine22535; }
    wxStaticText* GetStaticText2377() { return m_staticText2377; }
    wxStaticText* GetStaticText2418() { return m_staticText2418; }
    wxStaticText* GetStaticText2381() { return m_staticText2381; }
    wxStaticText* GetStaticText2379() { return m_staticText2379; }
    wxStaticText* GetStaticText2383() { return m_staticText2383; }
    wxStaticLine* GetStaticLine2385() { return m_staticLine2385; }
    wxStaticText* GetTestDimAxisX() { return m_testDimAxisX; }
    wxCheckBox* GetTestDimModeX() { return m_testDimModeX; }
    wxCheckBox* GetTestDimMinX() { return m_testDimMinX; }
    wxCheckBox* GetTestDimMaxX() { return m_testDimMaxX; }
    wxTextCtrl* GetTestDimResultX() { return m_testDimResultX; }
    wxStaticText* GetStaticText2431() { return m_staticText2431; }
    wxCheckBox* GetTestDimResultStateX() { return m_testDimResultStateX; }
    wxButton* GetTestDimTakeX() { return m_testDimTakeX; }
    wxStaticText* GetTestDimAxisY() { return m_testDimAxisY; }
    wxCheckBox* GetTestDimModeY() { return m_testDimModeY; }
    wxCheckBox* GetTestDimMinY() { return m_testDimMinY; }
    wxCheckBox* GetTestDimMaxY() { return m_testDimMaxY; }
    wxTextCtrl* GetTestDimResultY() { return m_testDimResultY; }
    wxStaticText* GetTestDimUnitX6() { return m_testDimUnitX6; }
    wxCheckBox* GetTestDimResultStateY() { return m_testDimResultStateY; }
    wxButton* GetTestDimTakeY() { return m_testDimTakeY; }
    wxStaticText* GetTestDimAxisZ() { return m_testDimAxisZ; }
    wxCheckBox* GetTestDimModeZ() { return m_testDimModeZ; }
    wxCheckBox* GetTestDimMinZ() { return m_testDimMinZ; }
    wxCheckBox* GetTestDimMaxZ() { return m_testDimMaxZ; }
    wxTextCtrl* GetTestDimResultZ() { return m_testDimResultZ; }
    wxStaticText* GetTestDimUnitX12() { return m_testDimUnitX12; }
    wxCheckBox* GetTestDimResultStateZ() { return m_testDimResultStateZ; }
    wxButton* GetTestDimTakeZ() { return m_testDimTakeZ; }
    wxStaticLine* GetStaticLine2429() { return m_staticLine2429; }
    wxButton* GetTestDimTakeAll() { return m_testDimTakeAll; }
    wxPanel* GetTestDimensions() { return m_testDimensions; }
    wxStaticText* GetStaticText21172() { return m_staticText21172; }
    wxStaticLine* GetStaticLine22533() { return m_staticLine22533; }
    wxToggleButton* GetTestToggleEndSwitch() { return m_testToggleEndSwitch; }
    wxPanel* GetTestLimitPage() { return m_testLimitPage; }
    wxStaticText* GetStaticText211726() { return m_staticText211726; }
    wxStaticLine* GetStaticLine225337() { return m_staticLine225337; }
    wxToggleButton* GetTestToggleTool() { return m_testToggleTool; }
    wxPanel* GetTestToolPage() { return m_testToolPage; }
    wxListbook* GetTestCaseBook() { return m_testCaseBook; }
    wxPanel* GetMainBookTest() { return m_mainBookTest; }
    wxPanel* GetFilePreviewPlaceholder() { return m_filePreviewPlaceholder; }
    wxStaticText* GetStaticText4402() { return m_staticText4402; }
    wxPanel* GetPanel6173() { return m_panel6173; }
    wxTextCtrl* GetFilePreviewDetails() { return m_filePreviewDetails; }
    wxPanel* GetPanel4398() { return m_panel4398; }
    wxTextCtrl* GetCurrentFileMangerPreviewFileName() { return m_currentFileMangerPreviewFileName; }
    wxPanel* GetMainBookPreviewPanel() { return m_mainBookPreviewPanel; }
    wxSimplebook* GetMainViewBook() { return m_mainViewBook; }
    wxPanel* GetWinMainView() { return m_winMainView; }
    wxChoice* GetMonitorViewSelector() { return m_monitorViewSelector; }
    wxStaticText* GetStaticText11481() { return m_staticText11481; }
    wxListCtrl* GetCncSummaryListCtrl() { return m_cncSummaryListCtrl; }
    wxButton* GetBtCancelRun() { return m_btCancelRun; }
    wxButton* GetBtConfirmRun() { return m_btConfirmRun; }
    wxPanel* GetCncSummary() { return m_cncSummary; }
    wxStaticText* GetStaticText1150() { return m_staticText1150; }
    wxTextCtrl* GetSetterListCount() { return m_setterListCount; }
    wxButton* GetBtClearSetterList() { return m_btClearSetterList; }
    wxButton* GetBtRefreshSetterList() { return m_btRefreshSetterList; }
    wxListCtrl* GetSetterList() { return m_setterList; }
    wxPanel* GetCncSetters() { return m_cncSetters; }
    wxStaticText* GetStaticText12831() { return m_staticText12831; }
    wxButton* GetBtRequestCtlConfig() { return m_btRequestCtlConfig; }
    wxDataViewListCtrl* GetDvListCtrlControllerConfig() { return m_dvListCtrlControllerConfig; }
    wxPanel* GetControllerConfiguration() { return m_controllerConfiguration; }
    wxStaticText* GetStaticText128313() { return m_staticText128313; }
    wxButton* GetBtRequestControllerPins() { return m_btRequestControllerPins; }
    wxDataViewListCtrl* GetDvListCtrlControllerPins() { return m_dvListCtrlControllerPins; }
    wxPanel* GetControllerPinReport() { return m_controllerPinReport; }
    wxStaticText* GetStaticText1283132() { return m_staticText1283132; }
    wxButton* GetBtClearMsgHistory() { return m_btClearMsgHistory; }
    wxTextCtrl* GetControllerMsgHistory() { return m_controllerMsgHistory; }
    wxPanel* GetConrollerMessages() { return m_conrollerMessages; }
    wxListbook* GetNotebookConfig() { return m_notebookConfig; }
    wxPanel* GetCncParameters() { return m_cncParameters; }
    wxPanel* GetPreprocessorPlaceholder() { return m_preprocessorPlaceholder; }
    wxPanel* GetCncPrePorcessor() { return m_cncPrePorcessor; }
    wxBitmapToggleButton* GetBtSaveOutboundAsTemplate1() { return m_btSaveOutboundAsTemplate1; }
    wxPanel* GetPlaceholderPanel() { return m_placeholderPanel; }
    wxStaticLine* GetStaticLine50163() { return m_staticLine50163; }
    wxBitmapToggleButton* GetBtnOrigin() { return m_btnOrigin; }
    wxBitmapToggleButton* GetBtnRuler() { return m_btnRuler; }
    wxBitmapToggleButton* GetBtnHelpLines() { return m_btnHelpLines; }
    wxBitmapToggleButton* GetBtnBoundBox() { return m_btnBoundBox; }
    wxBitmapToggleButton* GetBtnPosMarker() { return m_btnPosMarker; }
    wxBitmapToggleButton* GetBtnFlyPath() { return m_btnFlyPath; }
    wxStaticLine* GetStaticLine5016() { return m_staticLine5016; }
    wxBitmapToggleButton* GetSwitchMonitoing() { return m_switchMonitoing; }
    wxStaticLine* GetStaticLine3525() { return m_staticLine3525; }
    wxButton* Get3D_Refreh() { return m_3D_Refreh; }
    wxButton* Get3D_Clear() { return m_3D_Clear; }
    wxStaticLine* GetStaticLine47803() { return m_staticLine47803; }
    wxStaticText* GetStaticText32334() { return m_staticText32334; }
    wxSlider* GetDisplayInterval() { return m_displayInterval; }
    wxPanel* Get3DSplitterPlaceholder() { return m_3DSplitterPlaceholder; }
    wxStaticLine* GetStaticLine7091() { return m_staticLine7091; }
    wxButton* GetBtShowHideStatistics() { return m_btShowHideStatistics; }
    wxButton* GetBtShowHideReplayPane() { return m_btShowHideReplayPane; }
    wxStaticLine* GetStaticLine50051() { return m_staticLine50051; }
    wxStaticText* GetStaticText5014() { return m_staticText5014; }
    wxStaticBitmap* GetLableWorkpieceThickness() { return m_lableWorkpieceThickness; }
    wxStaticBitmap* GetToolState() { return m_toolState; }
    wxTextCtrl* GetToolId() { return m_toolId; }
    wxStaticLine* GetStaticLine5005() { return m_staticLine5005; }
    wxStaticLine* GetStaticLine5008() { return m_staticLine5008; }
    wxStaticText* GetStaticText1128() { return m_staticText1128; }
    wxTextCtrl* GetCrossings() { return m_crossings; }
    wxStaticText* GetStaticText1966() { return m_staticText1966; }
    wxTextCtrl* GetPassingCount() { return m_passingCount; }
    wxStaticLine* GetStaticLine50083() { return m_staticLine50083; }
    wxStaticText* GetStaticText395() { return m_staticText395; }
    wxTextCtrl* GetCmdDuration() { return m_cmdDuration; }
    wxPanel* Get3DOutboundStatistics() { return m_3DOutboundStatistics; }
    wxButton* GetMotionMonitorOptionDlg() { return m_motionMonitorOptionDlg; }
    wxStaticLine* GetStaticLine34832() { return m_staticLine34832; }
    wxButton* Get3D_Top() { return m_3D_Top; }
    wxButton* Get3D_Bottom() { return m_3D_Bottom; }
    wxButton* Get3D_Front() { return m_3D_Front; }
    wxButton* Get3D_Rear() { return m_3D_Rear; }
    wxButton* Get3D_Left() { return m_3D_Left; }
    wxButton* Get3D_Right() { return m_3D_Right; }
    wxStaticLine* GetStaticLine3483() { return m_staticLine3483; }
    wxButton* Get3D_Perspective1() { return m_3D_Perspective1; }
    wxButton* Get3D_Perspective2() { return m_3D_Perspective2; }
    wxButton* Get3D_Perspective3() { return m_3D_Perspective3; }
    wxButton* Get3D_Perspective4() { return m_3D_Perspective4; }
    wxStaticLine* GetStaticLine2341() { return m_staticLine2341; }
    wxPanel* GetPanel7704() { return m_panel7704; }
    wxListbook* GetListbookMonitor() { return m_listbookMonitor; }
    wxPanel* GetCnc3DPane() { return m_cnc3DPane; }
    wxStaticText* GetStaticText6138() { return m_staticText6138; }
    wxBitmapToggleButton* GetBtSaveOutboundAsTemplate2() { return m_btSaveOutboundAsTemplate2; }
    wxBitmapToggleButton* GetBtToggleOutboundEditorWordWrap() { return m_btToggleOutboundEditorWordWrap; }
    wxStyledTextCtrl* GetOutboundFileSource() { return m_outboundFileSource; }
    wxPanel* GetPanel6208() { return m_panel6208; }
    wxPanel* GetOutboundEditorSvgViewPlaceholder() { return m_outboundEditorSvgViewPlaceholder; }
    wxScrolledWindow* GetScrollWin7361() { return m_scrollWin7361; }
    wxPanel* GetPanel6210() { return m_panel6210; }
    wxSimplebook* GetSimpleBookOutBoundEditor() { return m_simpleBookOutBoundEditor; }
    wxStaticText* GetOutboundPosition() { return m_outboundPosition; }
    wxTextCtrl* GetOutboundEditStatus() { return m_outboundEditStatus; }
    wxStaticText* GetOutboundEditMode() { return m_outboundEditMode; }
    wxPanel* GetPanel7697() { return m_panel7697; }
    wxStaticText* GetStaticText6140() { return m_staticText6140; }
    wxPanel* GetOutboundPreviewPlaceholder() { return m_outboundPreviewPlaceholder; }
    wxStaticText* GetStaticText6218() { return m_staticText6218; }
    wxPanel* GetPanel7699() { return m_panel7699; }
    wxListbook* GetListbookPostProcessor() { return m_listbookPostProcessor; }
    wxPanel* GetCncPostProcessor() { return m_cncPostProcessor; }
    wxNotebook* GetOutboundNotebook() { return m_outboundNotebook; }
    wxPanel* GetMonitorBookCncPanel() { return m_monitorBookCncPanel; }
    wxPanel* GetMonitorTemplatePreviewPlaceHolder() { return m_monitorTemplatePreviewPlaceHolder; }
    wxStaticText* GetStaticText5142() { return m_staticText5142; }
    wxPanel* GetPanel5144() { return m_panel5144; }
    wxTextCtrl* GetCurrentInboundFilePreviewFileName() { return m_currentInboundFilePreviewFileName; }
    wxPanel* GetMonitorTemplatePanel() { return m_monitorTemplatePanel; }
    wxSimplebook* GetMonitorViewBook() { return m_monitorViewBook; }
    wxPanel* GetWinMonitorView() { return m_winMonitorView; }
    CncZView* GetZView() { return m_zView; }
    wxStaticText* GetInfoToolDiameter() { return m_infoToolDiameter; }
    wxPanel* GetPanelZView() { return m_panelZView; }
    wxCheckBox* GetKeepFileManagerPreview() { return m_keepFileManagerPreview; }
    wxStaticText* GetStaticText6018() { return m_staticText6018; }
    wxStaticLine* GetStaticLine4345() { return m_staticLine4345; }
    wxListCtrl* GetLruList() { return m_lruList; }
    wxPanel* GetSplitterPage6482() { return m_splitterPage6482; }
    wxPanel* GetMainFileViewPlaceholder() { return m_mainFileViewPlaceholder; }
    wxPanel* GetSplitterPage6490() { return m_splitterPage6490; }
    wxSplitterWindow* GetSplitter6478() { return m_splitter6478; }
    wxPanel* GetWinFileView() { return m_winFileView; }
    wxTextCtrl* GetStartupTrace() { return m_startupTrace; }
    wxPanel* GetPanelStartupTrace() { return m_panelStartupTrace; }
    wxTextCtrl* GetLogger() { return m_logger; }
    wxBitmapButton* GetClearLogger() { return m_clearLogger; }
    wxBitmapButton* GetCopyLogger() { return m_copyLogger; }
    wxStaticLine* GetStaticLine7605() { return m_staticLine7605; }
    wxBitmapToggleButton* GetShowLoggerOnDemand() { return m_showLoggerOnDemand; }
    wxPanel* GetPanel5878() { return m_panel5878; }
    wxNotebook* GetLoggerNotebook() { return m_loggerNotebook; }
    wxStaticText* GetStaticText58651() { return m_staticText58651; }
    wxStaticBitmap* GetGamepadState() { return m_gamepadState; }
    wxStaticText* GetStaticText5865() { return m_staticText5865; }
    wxStaticBitmap* GetGpBmp1() { return m_gpBmp1; }
    wxStaticBitmap* GetGpBmp2() { return m_gpBmp2; }
    wxStaticBitmap* GetGpBmp3() { return m_gpBmp3; }
    wxStaticBitmap* GetGpBmp4() { return m_gpBmp4; }
    wxStaticBitmap* GetStaticBitmap5890() { return m_staticBitmap5890; }
    wxTextCtrl* GetTmpTraceInfo() { return m_tmpTraceInfo; }
    wxPanel* GetWinLoggerView() { return m_winLoggerView; }
    wxStaticText* GetSvgParseMode() { return m_svgParseMode; }
    wxStaticLine* GetStaticLine6801() { return m_staticLine6801; }
    wxTextCtrl* GetInputFileName() { return m_inputFileName; }
    wxStaticLine* GetStaticLine602() { return m_staticLine602; }
    wxStaticBitmap* GetHeartbeatState() { return m_heartbeatState; }
    wxStaticLine* GetStaticLine60214444() { return m_staticLine60214444; }
    wxStaticBitmap* GetStaticBitmap7262() { return m_staticBitmap7262; }
    wxTextCtrl* GetLastConfigNotification() { return m_lastConfigNotification; }
    wxStaticLine* GetStaticLine6021() { return m_staticLine6021; }
    wxPanel* GetActivityPanel() { return m_activityPanel; }
    wxStaticLine* GetStaticLine680114() { return m_staticLine680114; }
    wxStaticText* GetStaticText5656() { return m_staticText5656; }
    wxStaticBitmap* GetProbeModeState() { return m_probeModeState; }
    wxStaticText* GetProbeModeStateLabel() { return m_probeModeStateLabel; }
    wxStaticLine* GetStaticLine60234112() { return m_staticLine60234112; }
    wxStaticText* GetStaticText56563() { return m_staticText56563; }
    wxStaticBitmap* GetSpeedCtrlState() { return m_speedCtrlState; }
    wxStaticText* GetSpeedCtrlStateLabel() { return m_speedCtrlStateLabel; }
    wxStaticLine* GetStaticLine680() { return m_staticLine680; }
    wxStaticText* GetLableF() { return LableF; }
    wxTextCtrl* GetConfiguredFeedSpeed() { return m_configuredFeedSpeed; }
    wxTextCtrl* GetConfiguredFeedSpeedMode() { return m_configuredFeedSpeedMode; }
    wxTextCtrl* GetRealtimeFeedSpeed() { return m_realtimeFeedSpeed; }
    wxTextCtrl* GetRealtimeFeedSpeedMode() { return m_realtimeFeedSpeedMode; }
    wxStaticLine* GetStaticLine602341127() { return m_staticLine602341127; }
    wxStaticText* GetStaticText5651() { return m_staticText5651; }
    wxStaticBitmap* GetRefPosState() { return m_refPosState; }
    wxStaticLine* GetStaticLine6801222() { return m_staticLine6801222; }
    wxStaticText* GetLableX() { return LableX; }
    wxTextCtrl* GetXAxis() { return m_xAxis; }
    wxTextCtrl* GetXAxisCtl() { return m_xAxisCtl; }
    wxStaticLine* GetStaticLine602348910() { return m_staticLine602348910; }
    wxStaticText* GetLabelY() { return LabelY; }
    wxTextCtrl* GetYAxis() { return m_yAxis; }
    wxTextCtrl* GetYAxisCtl() { return m_yAxisCtl; }
    wxStaticLine* GetStaticLine6023489() { return m_staticLine6023489; }
    wxStaticText* GetLableZ() { return LableZ; }
    wxTextCtrl* GetZAxis() { return m_zAxis; }
    wxTextCtrl* GetZAxisCtl() { return m_zAxisCtl; }
    wxStaticLine* GetStaticLine602348() { return m_staticLine602348; }
    wxComboBox* GetUnit() { return m_unit; }
    wxStaticLine* GetStaticLine60234() { return m_staticLine60234; }
    wxStaticText* GetStaticText1196() { return m_staticText1196; }
    wxPanel* GetXMinLimit() { return m_xMinLimit; }
    wxPanel* GetYMinLimit() { return m_yMinLimit; }
    wxPanel* GetZMinLimit() { return m_zMinLimit; }
    wxPanel* GetXMaxLimit() { return m_xMaxLimit; }
    wxPanel* GetYMaxLimit() { return m_yMaxLimit; }
    wxPanel* GetZMaxLimit() { return m_zMaxLimit; }
    wxStaticLine* GetStaticLine602341() { return m_staticLine602341; }
    wxStaticText* GetStaticText5637() { return m_staticText5637; }
    wxPanel* GetSupportButton1State() { return m_supportButton1State; }
    wxPanel* GetSupportButton2State() { return m_supportButton2State; }
    wxPanel* GetSupportButton3State() { return m_supportButton3State; }
    wxPanel* GetCableConnectedState() { return m_cableConnectedState; }
    wxPanel* GetToolPowerObserverState() { return m_toolPowerObserverState; }
    wxStaticLine* GetStaticLine6023412() { return m_staticLine6023412; }
    wxStaticBitmap* GetUpdateManagerUpdate() { return m_updateManagerUpdate; }
    wxPanel* GetStatusBar() { return m_statusBar; }
    wxStaticText* GetStaticText3261() { return m_staticText3261; }
    wxComboBox* GetCbUCUnitFrom() { return m_cbUCUnitFrom; }
    wxStaticText* GetStaticText3259() { return m_staticText3259; }
    wxComboBox* GetCbUCUnitTo() { return m_cbUCUnitTo; }
    wxTextCtrl* GetCbUCValueFrom() { return m_cbUCValueFrom; }
    wxTextCtrl* GetCbUCValueTo() { return m_cbUCValueTo; }
    wxStaticLine* GetStaticLine6549() { return m_staticLine6549; }
    wxComboBox* GetCbMetricUnitFrom() { return m_cbMetricUnitFrom; }
    wxTextCtrl* GetMetricValueFrom() { return m_metricValueFrom; }
    wxComboBox* GetCbMetricUnitTo() { return m_cbMetricUnitTo; }
    wxTextCtrl* GetMetricValueTo() { return m_metricValueTo; }
    wxButton* GetBtUCClose() { return m_btUCClose; }
    wxPanel* GetSvgUnitCalulator() { return m_svgUnitCalulator; }
    wxButton* GetEnableSerialSpy() { return m_enableSerialSpy; }
    wxButton* GetMarkSerialSpy() { return m_MarkSerialSpy; }
    wxButton* GetClearSerialSpy() { return m_clearSerialSpy; }
    wxComboBox* GetCbSerialSpyMode() { return m_cbSerialSpyMode; }
    wxBitmapToggleButton* GetClearSerialSpyOnConnect() { return m_clearSerialSpyOnConnect; }
    wxBitmapToggleButton* GetClearSerialSpyBeforNextRun() { return m_clearSerialSpyBeforNextRun; }
    wxPanel* GetSerialSpyPlaceholder() { return m_serialSpyPlaceholder; }
    wxStaticText* GetStaticText72374() { return m_staticText72374; }
    wxTextCtrl* GetLnUnkonwnDetails() { return m_lnUnkonwnDetails; }
    wxStaticBitmap* GetStaticBitmap7230() { return m_staticBitmap7230; }
    wxDataViewListCtrl* GetSpyUnknownDetails() { return m_spyUnknownDetails; }
    wxButton* GetBtOpenSpyDetailWindow() { return m_btOpenSpyDetailWindow; }
    wxPanel* GetUnknownPanel() { return m_unknownPanel; }
    wxStaticText* GetStaticText72373() { return m_staticText72373; }
    wxTextCtrl* GetLnInboundDetails() { return m_lnInboundDetails; }
    wxStaticBitmap* GetStaticBitmap7232() { return m_staticBitmap7232; }
    wxDataViewListCtrl* GetSpyInboundDetails() { return m_spyInboundDetails; }
    wxButton* GetButton75612() { return m_button75612; }
    wxPanel* GetInboundPanel() { return m_inboundPanel; }
    wxStaticText* GetStaticText7237() { return m_staticText7237; }
    wxTextCtrl* GetLnOutboundDetails() { return m_lnOutboundDetails; }
    wxStaticBitmap* GetStaticBitmap7234() { return m_staticBitmap7234; }
    wxDataViewListCtrl* GetSpyOutboundDetails() { return m_spyOutboundDetails; }
    wxButton* GetButton75611() { return m_button75611; }
    wxPanel* GetOutbundPanel() { return m_outbundPanel; }
    wxSimplebook* GetSypDetailsBook() { return m_sypDetailsBook; }
    wxPanel* GetSerialSpyView() { return m_serialSpyView; }
    wxPropertyGridManager* GetDebuggerPropertyManagerGrid() { return m_debuggerPropertyManagerGrid; }
    wxPanel* GetDebuggerView() { return m_debuggerView; }
    wxBitmapToggleButton* GetBtTogglePosSpy() { return m_btTogglePosSpy; }
    wxBitmapButton* GetBtCopyPosSpy() { return m_btCopyPosSpy; }
    wxBitmapButton* GetBtSearchPosSpy() { return m_btSearchPosSpy; }
    wxBitmapButton* GetBtClearPositionSpy() { return m_btClearPositionSpy; }
    wxComboBox* GetCbContentPosSpy() { return m_cbContentPosSpy; }
    wxStaticText* GetStaticText4526() { return m_staticText4526; }
    wxTextCtrl* GetPositionSpyCount() { return m_positionSpyCount; }
    wxListCtrl* GetPositionSpy() { return m_positionSpy; }
    wxBitmapButton* GetBmpButton47181() { return m_bmpButton47181; }
    wxBitmapButton* GetBmpButton4718() { return m_bmpButton4718; }
    wxBitmapButton* GetBmpButton47182() { return m_bmpButton47182; }
    wxBitmapButton* GetBmpButton47183() { return m_bmpButton47183; }
    wxPanel* GetPanel7502() { return m_panel7502; }
    wxPanel* GetSpeedMonitorPlaceholder() { return m_speedMonitorPlaceholder; }
    wxPanel* GetPanel7504() { return m_panel7504; }
    wxNotebook* GetNotebookSpeedMonitor() { return m_notebookSpeedMonitor; }
    wxPanel* GetSpeedPanel() { return m_speedPanel; }
    wxPanel* GetPositionMonitorView() { return m_positionMonitorView; }
    wxAuiManager* GetAuimgrMain() { return m_auimgrMain; }
    wxMenuBar* GetMenuBar() { return m_menuBar; }
    wxTimer* GetStartupTimer() { return m_startupTimer; }
    wxTimer* GetSerialTimer() { return m_serialTimer; }
    wxTimer* GetTraceTimer() { return m_traceTimer; }
    MainFrameBClass(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("CNC Controller"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(1600,1000), long style = wxDEFAULT_FRAME_STYLE);
    virtual ~MainFrameBClass();
};


class PathGeneratorFrameBase : public wxFrame
{
protected:
    wxSplitterWindow* m_mainSplitter;
    wxPanel* m_leftMainSplitterPage;
    wxButton* m_btPGMinimizeTree;
    wxTextCtrl* m_treeSearchText;
    wxButton* m_btSearchTree;
    wxTreeCtrl* m_templateTree;
    wxPanel* m_rightMainSplitterPage;
    wxSplitterWindow* m_splitter3185;
    wxPanel* m_splitterPage3189;
    wxComboBox* m_pgPathSelector;
    wxSplitterWindow* m_splitter2932;
    wxPanel* m_splitterPage2936;
    wxNotebook* m_pgMainBook;
    wxPanel* m_pgPreviewPage;
#if wxUSE_WEBVIEW
    wxWebView* m_pgPreview;
#endif // wxUSE_WEBVIEW

    wxPanel* m_pgAdditionalCodePage;
    wxTextCtrl* m_aditionalCode;
    wxPanel* m_pgAdditionalInfoPage;
    wxTextCtrl* m_additionalInfo;
    wxPanel* m_splitterPage2940;
    wxStaticText* m_staticText3401;
    wxTextCtrl* m_currentTemplate;
    wxStaticText* m_staticText33892;
    wxComboBox* m_cbEditMode;
    wxButton* m_updatePreview;
    wxStaticText* m_staticText3389;
    wxComboBox* m_cbDisplayMode;
    wxToolbook* m_tbOutput;
    wxPanel* m_panelPreview;
    wxTextCtrl* m_generatedPreview;
    wxPanel* m_panelResult;
    wxTextCtrl* m_generatedResult;
    wxPanel* m_panelInfo;
    wxTextCtrl* m_processInfo;
    wxPanel* m_splitterPage3193;
    wxButton* m_btPGGenerate;
    wxButton* m_btPGClear;
    wxButton* m_btPGReplaceEdit;
    wxButton* m_btPGCopy;
    wxButton* m_btPGSave;
    wxButton* m_btPGMinimize;
    wxButton* m_btPGClose;
    wxPropertyGridManager* m_pgParameterMgr;
    wxPGProperty* m_pgCatCommon;
    wxPGProperty* m_pgPropToolDiameter;
    wxPGProperty* m_pgPropCorrectionMode;
    wxPGProperty* m_pgPropCorrectionJointType;
    wxPGProperty* m_pgPropCLResolution;
    wxPGProperty* m_pgPropPathColour;
    wxPGProperty* m_pgPropConfigBlock;
    wxPGProperty* m_pgCatPath;
    wxPGProperty* m_pgProp01;
    wxPGProperty* m_pgCatGrid;
    wxPGProperty* m_pgPropRefCross;
    wxPGProperty* m_pgPropGridHelpConstructs;
    wxPGProperty* m_pgPropGridDisplay;
    wxPGProperty* m_pgPropGridSize;
    wxPGProperty* m_pgCatCncBlock;
    wxPGProperty* m_pgPropCncInclude;
    wxPGProperty* m_pgCatCncParameter;
    wxPGProperty* m_pgPropCncZDepthMode;
    wxPGProperty* m_pgPropCncZDepth;
    wxPGProperty* m_pgPropCncToolCorrection;
    wxPGProperty* m_pgPropCncReversePath;
    wxPGProperty* m_pgCatSvg;
    wxPGProperty* m_pgPropSvgWidth;
    wxPGProperty* m_pgPropSvgHeight;
    wxPGProperty* m_pgCatViewBox;
    wxPGProperty* m_pgPropSvgVbX;
    wxPGProperty* m_pgPropSvgVbY;
    wxPGProperty* m_pgPropSvgVbW;
    wxPGProperty* m_pgPropSvgVbH;
    wxPGProperty* m_pgCatTransform;
    wxPGProperty* m_pgPropTransformMode;
    wxPGProperty* m_pgCatTranslate;
    wxPGProperty* m_pgPropTranslateX;
    wxPGProperty* m_pgPropTranslateY;
    wxPGProperty* m_pgCatScale;
    wxPGProperty* m_pgPropScaleX;
    wxPGProperty* m_pgPropScaleY;
    wxPGProperty* m_pgCatRotate;
    wxPGProperty* m_pgPropRotateA;
    wxPGProperty* m_pgPropRotateX;
    wxPGProperty* m_pgPropRotateY;
    wxPGProperty* m_pgCatSkrew;
    wxPGProperty* m_pgPropSkewX;
    wxPGProperty* m_pgPropSkewY;
    wxCheckBox* m_autoGenerate;

protected:
    virtual void onCloseWindow(wxCloseEvent& event) { event.Skip(); }
    virtual void onSize(wxSizeEvent& event) { event.Skip(); }
    virtual void onActivate(wxActivateEvent& event) { event.Skip(); }
    virtual void onMaximize(wxMaximizeEvent& event) { event.Skip(); }
    virtual void onShow(wxShowEvent& event) { event.Skip(); }
    virtual void mainShashPositionChanged( wxSplitterEvent& event) { event.Skip(); }
    virtual void mainShashPositionChanging( wxSplitterEvent& event) { event.Skip(); }
    virtual void toogleTreeSize(wxCommandEvent& event) { event.Skip(); }
    virtual void updateTreeSearch(wxCommandEvent& event) { event.Skip(); }
    virtual void keyDownTreeSearch(wxKeyEvent& event) { event.Skip(); }
    virtual void treeSearch(wxCommandEvent& event) { event.Skip(); }
    virtual void selectTemplateTree(wxTreeEvent& event) { event.Skip(); }
    virtual void selectPathSelector(wxCommandEvent& event) { event.Skip(); }
    virtual void pgMainBookChanged(wxNotebookEvent& event) { event.Skip(); }
    #if wxUSE_WEBVIEW
    #endif // wxUSE_WEBVIEW
    virtual void selectEditMode(wxCommandEvent& event) { event.Skip(); }
    virtual void updatePreview(wxCommandEvent& event) { event.Skip(); }
    virtual void selectDisplayMode(wxCommandEvent& event) { event.Skip(); }
    virtual void generatePath(wxCommandEvent& event) { event.Skip(); }
    virtual void clearView(wxCommandEvent& event) { event.Skip(); }
    virtual void relaceEditControlSelection(wxCommandEvent& event) { event.Skip(); }
    virtual void copyPath(wxCommandEvent& event) { event.Skip(); }
    virtual void saveTemplate(wxCommandEvent& event) { event.Skip(); }
    virtual void toogleSize(wxCommandEvent& event) { event.Skip(); }
    virtual void onCloseWindowFromButton(wxCommandEvent& event) { event.Skip(); }
    virtual void propertyChanged(wxPropertyGridEvent& event) { event.Skip(); }
    virtual void propertyChanging(wxPropertyGridEvent& event) { event.Skip(); }
    virtual void checkAutoGenerate(wxCommandEvent& event) { event.Skip(); }

public:
    wxButton* GetBtPGMinimizeTree() { return m_btPGMinimizeTree; }
    wxTextCtrl* GetTreeSearchText() { return m_treeSearchText; }
    wxButton* GetBtSearchTree() { return m_btSearchTree; }
    wxTreeCtrl* GetTemplateTree() { return m_templateTree; }
    wxPanel* GetLeftMainSplitterPage() { return m_leftMainSplitterPage; }
    wxComboBox* GetPgPathSelector() { return m_pgPathSelector; }
    wxWebView* GetPgPreview() { return m_pgPreview; }
    wxPanel* GetPgPreviewPage() { return m_pgPreviewPage; }
    wxTextCtrl* GetAditionalCode() { return m_aditionalCode; }
    wxPanel* GetPgAdditionalCodePage() { return m_pgAdditionalCodePage; }
    wxTextCtrl* GetAdditionalInfo() { return m_additionalInfo; }
    wxPanel* GetPgAdditionalInfoPage() { return m_pgAdditionalInfoPage; }
    wxNotebook* GetPgMainBook() { return m_pgMainBook; }
    wxPanel* GetSplitterPage2936() { return m_splitterPage2936; }
    wxStaticText* GetStaticText3401() { return m_staticText3401; }
    wxTextCtrl* GetCurrentTemplate() { return m_currentTemplate; }
    wxStaticText* GetStaticText33892() { return m_staticText33892; }
    wxComboBox* GetCbEditMode() { return m_cbEditMode; }
    wxButton* GetUpdatePreview() { return m_updatePreview; }
    wxStaticText* GetStaticText3389() { return m_staticText3389; }
    wxComboBox* GetCbDisplayMode() { return m_cbDisplayMode; }
    wxTextCtrl* GetGeneratedPreview() { return m_generatedPreview; }
    wxPanel* GetPanelPreview() { return m_panelPreview; }
    wxTextCtrl* GetGeneratedResult() { return m_generatedResult; }
    wxPanel* GetPanelResult() { return m_panelResult; }
    wxTextCtrl* GetProcessInfo() { return m_processInfo; }
    wxPanel* GetPanelInfo() { return m_panelInfo; }
    wxToolbook* GetTbOutput() { return m_tbOutput; }
    wxPanel* GetSplitterPage2940() { return m_splitterPage2940; }
    wxSplitterWindow* GetSplitter2932() { return m_splitter2932; }
    wxPanel* GetSplitterPage3189() { return m_splitterPage3189; }
    wxButton* GetBtPGGenerate() { return m_btPGGenerate; }
    wxButton* GetBtPGClear() { return m_btPGClear; }
    wxButton* GetBtPGReplaceEdit() { return m_btPGReplaceEdit; }
    wxButton* GetBtPGCopy() { return m_btPGCopy; }
    wxButton* GetBtPGSave() { return m_btPGSave; }
    wxButton* GetBtPGMinimize() { return m_btPGMinimize; }
    wxButton* GetBtPGClose() { return m_btPGClose; }
    wxPropertyGridManager* GetPgParameterMgr() { return m_pgParameterMgr; }
    wxCheckBox* GetAutoGenerate() { return m_autoGenerate; }
    wxPanel* GetSplitterPage3193() { return m_splitterPage3193; }
    wxSplitterWindow* GetSplitter3185() { return m_splitter3185; }
    wxPanel* GetRightMainSplitterPage() { return m_rightMainSplitterPage; }
    wxSplitterWindow* GetMainSplitter() { return m_mainSplitter; }
    PathGeneratorFrameBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("SVG Path Generator"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(1600,750), long style = wxDEFAULT_FRAME_STYLE|wxFRAME_FLOAT_ON_PARENT);
    virtual ~PathGeneratorFrameBase();
};


class CncFilePreviewWndBase : public wxFrame
{
protected:
    wxTextCtrl* m_previewFileName;
    wxTextCtrl* m_previewFileType;
    wxPanel* m_previewPlaceHolder;

protected:
    virtual void onClose(wxCloseEvent& event) { event.Skip(); }

public:
    wxTextCtrl* GetPreviewFileName() { return m_previewFileName; }
    wxTextCtrl* GetPreviewFileType() { return m_previewFileType; }
    wxPanel* GetPreviewPlaceHolder() { return m_previewPlaceHolder; }
    CncFilePreviewWndBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Cnc File Preview"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,300), long style = wxDEFAULT_FRAME_STYLE|wxFRAME_FLOAT_ON_PARENT);
    virtual ~CncFilePreviewWndBase();
};


class CncFilePreviewBase : public wxPanel
{
protected:
    wxSimplebook* m_previewBook;
    wxPanel* m_panel3764;
    wxScrolledWindow* m_scrollWin7365;
    wxPanel* m_svgPreviewPlaceholder;
    wxPanel* m_panel3766;
    wxPanel* m_gcodePreviewPlaceholder;
    wxButton* m_3D_Top;
    wxButton* m_3D_Bottom;
    wxButton* m_3D_Front;
    wxButton* m_3D_Rear;
    wxButton* m_3D_Left;
    wxButton* m_3D_Right;
    wxStaticLine* m_staticLine3483;
    wxButton* m_3D_Perspective1;
    wxButton* m_3D_Perspective2;
    wxButton* m_3D_Perspective3;
    wxButton* m_3D_Perspective4;

protected:
    virtual void showFromTop3D(wxCommandEvent& event) { event.Skip(); }
    virtual void showFromBottom3D(wxCommandEvent& event) { event.Skip(); }
    virtual void showFromFront3D(wxCommandEvent& event) { event.Skip(); }
    virtual void showFromRear3D(wxCommandEvent& event) { event.Skip(); }
    virtual void showFromLeft3D(wxCommandEvent& event) { event.Skip(); }
    virtual void showFromRight3D(wxCommandEvent& event) { event.Skip(); }
    virtual void show3D(wxCommandEvent& event) { event.Skip(); }

public:
    wxPanel* GetSvgPreviewPlaceholder() { return m_svgPreviewPlaceholder; }
    wxScrolledWindow* GetScrollWin7365() { return m_scrollWin7365; }
    wxPanel* GetPanel3764() { return m_panel3764; }
    wxPanel* GetGcodePreviewPlaceholder() { return m_gcodePreviewPlaceholder; }
    wxButton* Get3D_Top() { return m_3D_Top; }
    wxButton* Get3D_Bottom() { return m_3D_Bottom; }
    wxButton* Get3D_Front() { return m_3D_Front; }
    wxButton* Get3D_Rear() { return m_3D_Rear; }
    wxButton* Get3D_Left() { return m_3D_Left; }
    wxButton* Get3D_Right() { return m_3D_Right; }
    wxStaticLine* GetStaticLine3483() { return m_staticLine3483; }
    wxButton* Get3D_Perspective1() { return m_3D_Perspective1; }
    wxButton* Get3D_Perspective2() { return m_3D_Perspective2; }
    wxButton* Get3D_Perspective3() { return m_3D_Perspective3; }
    wxButton* Get3D_Perspective4() { return m_3D_Perspective4; }
    wxPanel* GetPanel3766() { return m_panel3766; }
    wxSimplebook* GetPreviewBook() { return m_previewBook; }
    CncFilePreviewBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,300), long style = wxTAB_TRAVERSAL);
    virtual ~CncFilePreviewBase();
};


class CncToolMagazineBase : public wxPanel
{
protected:
    wxListCtrl* m_toolMagazine;
    wxStaticLine* m_staticLine4628;
    wxStaticText* m_staticText5046;
    wxStaticText* m_staticText5056;
    wxCheckBox* m_cbDefaultToolUsage;
    wxStaticText* m_staticText5058;
    wxComboBox* m_cbDefaultMappedTo;
    wxStaticLine* m_staticLine5048;
    wxStaticText* m_staticText5050;
    wxStaticText* m_staticText4609;
    wxTextCtrl* m_toolMagazineId;
    wxStaticText* m_staticText5072;
    wxStaticText* m_staticText4613;
    wxComboBox* m_toolMagazineType;
    wxStaticText* m_staticText5074;
    wxStaticText* m_staticText4617;
    wxTextCtrl* m_toolMagazineDiameter;
    wxStaticText* m_staticText5076;
    wxStaticText* m_staticText5064;
    wxTextCtrl* m_toolMagazineLength;
    wxStaticText* m_staticText5078;
    wxStaticText* m_staticText5068;
    wxTextCtrl* m_toolMagazineOffset;
    wxStaticText* m_staticText5080;
    wxStaticText* m_staticText4638;
    wxTextCtrl* m_toolMagazineComment;
    wxStaticText* m_staticText5082;
    wxButton* m_btToolMagazineRemove;
    wxButton* m_btToolMagazineDuplicate;
    wxButton* m_btToolMagazineAdd;
    wxButton* m_btToolMagazineEdit;
    wxButton* m_btToolMagazineCancle;

protected:
    virtual void selectedTool(wxListEvent& event) { event.Skip(); }
    virtual void clickUseDefaultTool(wxCommandEvent& event) { event.Skip(); }
    virtual void selectDefaultToolMappedTo(wxCommandEvent& event) { event.Skip(); }
    virtual void selectType(wxCommandEvent& event) { event.Skip(); }
    virtual void removeTool(wxCommandEvent& event) { event.Skip(); }
    virtual void duplicateTool(wxCommandEvent& event) { event.Skip(); }
    virtual void addTool(wxCommandEvent& event) { event.Skip(); }
    virtual void editTool(wxCommandEvent& event) { event.Skip(); }
    virtual void cancel(wxCommandEvent& event) { event.Skip(); }

public:
    wxListCtrl* GetToolMagazine() { return m_toolMagazine; }
    wxStaticLine* GetStaticLine4628() { return m_staticLine4628; }
    wxStaticText* GetStaticText5046() { return m_staticText5046; }
    wxStaticText* GetStaticText5056() { return m_staticText5056; }
    wxCheckBox* GetCbDefaultToolUsage() { return m_cbDefaultToolUsage; }
    wxStaticText* GetStaticText5058() { return m_staticText5058; }
    wxComboBox* GetCbDefaultMappedTo() { return m_cbDefaultMappedTo; }
    wxStaticLine* GetStaticLine5048() { return m_staticLine5048; }
    wxStaticText* GetStaticText5050() { return m_staticText5050; }
    wxStaticText* GetStaticText4609() { return m_staticText4609; }
    wxTextCtrl* GetToolMagazineId() { return m_toolMagazineId; }
    wxStaticText* GetStaticText5072() { return m_staticText5072; }
    wxStaticText* GetStaticText4613() { return m_staticText4613; }
    wxComboBox* GetToolMagazineType() { return m_toolMagazineType; }
    wxStaticText* GetStaticText5074() { return m_staticText5074; }
    wxStaticText* GetStaticText4617() { return m_staticText4617; }
    wxTextCtrl* GetToolMagazineDiameter() { return m_toolMagazineDiameter; }
    wxStaticText* GetStaticText5076() { return m_staticText5076; }
    wxStaticText* GetStaticText5064() { return m_staticText5064; }
    wxTextCtrl* GetToolMagazineLength() { return m_toolMagazineLength; }
    wxStaticText* GetStaticText5078() { return m_staticText5078; }
    wxStaticText* GetStaticText5068() { return m_staticText5068; }
    wxTextCtrl* GetToolMagazineOffset() { return m_toolMagazineOffset; }
    wxStaticText* GetStaticText5080() { return m_staticText5080; }
    wxStaticText* GetStaticText4638() { return m_staticText4638; }
    wxTextCtrl* GetToolMagazineComment() { return m_toolMagazineComment; }
    wxStaticText* GetStaticText5082() { return m_staticText5082; }
    wxButton* GetBtToolMagazineRemove() { return m_btToolMagazineRemove; }
    wxButton* GetBtToolMagazineDuplicate() { return m_btToolMagazineDuplicate; }
    wxButton* GetBtToolMagazineAdd() { return m_btToolMagazineAdd; }
    wxButton* GetBtToolMagazineEdit() { return m_btToolMagazineEdit; }
    wxButton* GetBtToolMagazineCancle() { return m_btToolMagazineCancle; }
    CncToolMagazineBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxTAB_TRAVERSAL);
    virtual ~CncToolMagazineBase();
};


class CncTemplateObserverBase : public wxPanel
{
protected:
    wxStaticText* m_staticText6508;
    wxCheckBox* m_observationMode;
    wxStaticText* m_staticText6553;
    wxRadioBox* m_actionSelection;
    wxStaticText* m_staticText7386;
    wxTextCtrl* m_curTemplateTimestamp;
    wxStaticText* m_staticText6527;
    wxTextCtrl* m_lastTimestamp;
    wxButton* m_button6532;
    wxTextCtrl* m_observerTrace;
    wxTextCtrl* m_curTemplateName;
    wxTextCtrl* m_curTemplateSize;
    wxTimer* m_observeTimer;

protected:
    virtual void changeObservationMode(wxCommandEvent& event) { event.Skip(); }
    virtual void clearTrace(wxCommandEvent& event) { event.Skip(); }
    virtual void observe(wxTimerEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText6508() { return m_staticText6508; }
    wxCheckBox* GetObservationMode() { return m_observationMode; }
    wxStaticText* GetStaticText6553() { return m_staticText6553; }
    wxRadioBox* GetActionSelection() { return m_actionSelection; }
    wxStaticText* GetStaticText7386() { return m_staticText7386; }
    wxTextCtrl* GetCurTemplateTimestamp() { return m_curTemplateTimestamp; }
    wxStaticText* GetStaticText6527() { return m_staticText6527; }
    wxTextCtrl* GetLastTimestamp() { return m_lastTimestamp; }
    wxButton* GetButton6532() { return m_button6532; }
    wxTextCtrl* GetObserverTrace() { return m_observerTrace; }
    wxTextCtrl* GetCurTemplateName() { return m_curTemplateName; }
    wxTextCtrl* GetCurTemplateSize() { return m_curTemplateSize; }
    wxTimer* GetObserveTimer() { return m_observeTimer; }
    CncTemplateObserverBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,300), long style = wxTAB_TRAVERSAL);
    virtual ~CncTemplateObserverBase();
};


class CncFileViewBase : public wxPanel
{
protected:
    wxBitmapButton* m_btDirUp;
    wxBitmapButton* m_btRefresh;
    wxBitmapButton* m_btDefaultPath;
    wxStaticLine* m_staticLine5035;
    wxBitmapButton* m_btNewTemplate;
    wxBitmapButton* m_btOpenTemplate;
    wxListCtrl* m_fileList;
    wxComboBox* m_filterExtention;
    wxTextCtrl* m_currentDirectory;

protected:
    virtual void aFolderUp(wxCommandEvent& event) { event.Skip(); }
    virtual void refresh(wxCommandEvent& event) { event.Skip(); }
    virtual void selectDefault(wxCommandEvent& event) { event.Skip(); }
    virtual void selectNewTemplate(wxCommandEvent& event) { event.Skip(); }
    virtual void selectOpenTemplate(wxCommandEvent& event) { event.Skip(); }
    virtual void fileListActivated(wxListEvent& event) { event.Skip(); }
    virtual void fileListSelected(wxListEvent& event) { event.Skip(); }
    virtual void fileListLeave(wxMouseEvent& event) { event.Skip(); }
    virtual void selectFilter(wxCommandEvent& event) { event.Skip(); }

public:
    wxBitmapButton* GetBtDirUp() { return m_btDirUp; }
    wxBitmapButton* GetBtRefresh() { return m_btRefresh; }
    wxBitmapButton* GetBtDefaultPath() { return m_btDefaultPath; }
    wxStaticLine* GetStaticLine5035() { return m_staticLine5035; }
    wxBitmapButton* GetBtNewTemplate() { return m_btNewTemplate; }
    wxBitmapButton* GetBtOpenTemplate() { return m_btOpenTemplate; }
    wxListCtrl* GetFileList() { return m_fileList; }
    wxComboBox* GetFilterExtention() { return m_filterExtention; }
    wxTextCtrl* GetCurrentDirectory() { return m_currentDirectory; }
    CncFileViewBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxTAB_TRAVERSAL);
    virtual ~CncFileViewBase();
};


class GL3DOptionPaneBase : public wxPanel
{
protected:
    wxChoicebook* m_choicebook6345;
    wxPanel* m_panel3DOptions;
    wxPropertyGridManager* m_pgMgr3543;
    wxPGProperty* m_pgCatDisplayOptions;
    wxPGProperty* m_pgPropDrawType;
    wxPGProperty* m_pgPropAutoScaling;
    wxPGProperty* m_pgPropDrawOrigin;
    wxPGProperty* m_pgPropDrawFlyPath;
    wxPGProperty* m_pgPropDrawRuler;
    wxPGProperty* m_pgPropDrawHelpLines;
    wxPGProperty* m_pgPropPositionMarker;
    wxPGProperty* m_pgPropZoom;
    wxPGProperty* m_pgPropPathColour;
    wxPGProperty* m_pgPropFlyColour;
    wxPGProperty* m_pgPropWorkColour;
    wxPGProperty* m_pgPropUserColour;
    wxPGProperty* m_pgPropMaxColour;
    wxPGProperty* m_pgPropHL3D;
    wxPGProperty* m_pgPropHLXYPlane;
    wxPGProperty* m_pgPropHLXZPlane;
    wxPGProperty* m_pgPropHLYZPlane;
    wxPGProperty* m_pgCatBoundBox;
    wxPGProperty* m_pgPropDrawBoundBox;
    wxPGProperty* m_pgPropBoundBoxColour;
    wxPGProperty* m_pgCatRenderOptions;
    wxPGProperty* m_pgPropSmoothing;
    wxCheckBox* m_cbAutoUpdate;
    wxPanel* m_panelAnimation;
    wxScrolledWindow* m_scrollWin7039;
    wxStaticText* m_staticText6443;
    wxBitmapButton* m_btResetCameraPos2;
    wxSlider* m_sliderCameraRotation;
    wxBitmapToggleButton* m_btCameraRotionClockwise;
    wxBitmapToggleButton* m_btCameraRotionAnticlockwise;
    wxStaticText* m_staticText3684;
    wxSlider* m_sliderCameraRotationSpeed;
    wxStaticLine* m_staticLine64453;
    wxStaticText* m_staticText6441;
    wxBitmapButton* m_btResetCameraPos1;
    wxSlider* m_sliderModelRotationX;
    wxButton* m_btModelRotationResetX;
    wxSlider* m_sliderModelRotationY;
    wxButton* m_btModelRotationResetY;
    wxSlider* m_sliderModelRotationZ;
    wxButton* m_btModelRotationResetZ;
    wxStaticLine* m_staticLine6445345;
    wxSlider* m_sliderModelRotationXYZ;
    wxButton* m_btModelRotationResetXYZ;
    wxStaticLine* m_staticLine644534;

protected:
    virtual void propertyChanged(wxPropertyGridEvent& event) { event.Skip(); }
    virtual void propertyChanging(wxPropertyGridEvent& event) { event.Skip(); }
    virtual void resetCameraPostion(wxCommandEvent& event) { event.Skip(); }
    virtual void cameraRotationChanged(wxScrollEvent& event) { event.Skip(); }
    virtual void autoCameraRotationClockwise(wxCommandEvent& event) { event.Skip(); }
    virtual void autoCameraRotationAnticlockwise(wxCommandEvent& event) { event.Skip(); }
    virtual void cameraRotationSpeedChanged(wxScrollEvent& event) { event.Skip(); }
    virtual void resetModelPostion(wxCommandEvent& event) { event.Skip(); }
    virtual void modelRotationXChanged(wxScrollEvent& event) { event.Skip(); }
    virtual void resetModelRotationX(wxCommandEvent& event) { event.Skip(); }
    virtual void modelRotationYChanged(wxScrollEvent& event) { event.Skip(); }
    virtual void resetModelRotationY(wxCommandEvent& event) { event.Skip(); }
    virtual void modelRotationZChanged(wxScrollEvent& event) { event.Skip(); }
    virtual void resetModelRotationZ(wxCommandEvent& event) { event.Skip(); }
    virtual void modelRotationXYZChanged(wxScrollEvent& event) { event.Skip(); }
    virtual void resetModelRotationXYZ(wxCommandEvent& event) { event.Skip(); }

public:
    wxPropertyGridManager* GetPgMgr3543() { return m_pgMgr3543; }
    wxCheckBox* GetCbAutoUpdate() { return m_cbAutoUpdate; }
    wxPanel* GetPanel3DOptions() { return m_panel3DOptions; }
    wxStaticText* GetStaticText6443() { return m_staticText6443; }
    wxBitmapButton* GetBtResetCameraPos2() { return m_btResetCameraPos2; }
    wxSlider* GetSliderCameraRotation() { return m_sliderCameraRotation; }
    wxBitmapToggleButton* GetBtCameraRotionClockwise() { return m_btCameraRotionClockwise; }
    wxBitmapToggleButton* GetBtCameraRotionAnticlockwise() { return m_btCameraRotionAnticlockwise; }
    wxStaticText* GetStaticText3684() { return m_staticText3684; }
    wxSlider* GetSliderCameraRotationSpeed() { return m_sliderCameraRotationSpeed; }
    wxStaticLine* GetStaticLine64453() { return m_staticLine64453; }
    wxStaticText* GetStaticText6441() { return m_staticText6441; }
    wxBitmapButton* GetBtResetCameraPos1() { return m_btResetCameraPos1; }
    wxSlider* GetSliderModelRotationX() { return m_sliderModelRotationX; }
    wxButton* GetBtModelRotationResetX() { return m_btModelRotationResetX; }
    wxSlider* GetSliderModelRotationY() { return m_sliderModelRotationY; }
    wxButton* GetBtModelRotationResetY() { return m_btModelRotationResetY; }
    wxSlider* GetSliderModelRotationZ() { return m_sliderModelRotationZ; }
    wxButton* GetBtModelRotationResetZ() { return m_btModelRotationResetZ; }
    wxStaticLine* GetStaticLine6445345() { return m_staticLine6445345; }
    wxSlider* GetSliderModelRotationXYZ() { return m_sliderModelRotationXYZ; }
    wxButton* GetBtModelRotationResetXYZ() { return m_btModelRotationResetXYZ; }
    wxStaticLine* GetStaticLine644534() { return m_staticLine644534; }
    wxScrolledWindow* GetScrollWin7039() { return m_scrollWin7039; }
    wxPanel* GetPanelAnimation() { return m_panelAnimation; }
    wxChoicebook* GetChoicebook6345() { return m_choicebook6345; }
    GL3DOptionPaneBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxTAB_TRAVERSAL);
    virtual ~GL3DOptionPaneBase();
};


class GL3DDrawPaneBase : public wxPanel
{
protected:
    wxPanel* m_rotatePaneZ3D;
    wxStaticText* m_staticText487556;
    wxPanel* m_rotatePaneY3D;
    wxStaticText* m_staticText48755;
    wxPanel* m_rotatePaneX3D;
    wxStaticText* m_staticText4875;
    wxPanel* m_drawPane3DPlaceHolder;
    wxPanel* m_scalePane3D;

protected:

public:
    wxPanel* GetRotatePaneZ3D() { return m_rotatePaneZ3D; }
    wxStaticText* GetStaticText487556() { return m_staticText487556; }
    wxPanel* GetRotatePaneY3D() { return m_rotatePaneY3D; }
    wxStaticText* GetStaticText48755() { return m_staticText48755; }
    wxPanel* GetRotatePaneX3D() { return m_rotatePaneX3D; }
    wxStaticText* GetStaticText4875() { return m_staticText4875; }
    wxPanel* GetDrawPane3DPlaceHolder() { return m_drawPane3DPlaceHolder; }
    wxPanel* GetScalePane3D() { return m_scalePane3D; }
    GL3DDrawPaneBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(200,-1), long style = wxTAB_TRAVERSAL);
    virtual ~GL3DDrawPaneBase();
};


class CncStatisticsPaneBase : public wxPanel
{
protected:
    wxSimplebook* m_contextBook;
    wxPanel* m_panelStatistics;
    wxNotebook* m_statisticBook;
    wxPanel* m_statisticPageSum;
    wxListCtrl* m_statisticSummaryListCtrl;
    wxCheckBox* m_checkBoxStatisticUpdate;
    wxPanel* m_statisticPageVecties;
    wxButton* m_3D_Trace3;
    wxButton* m_3D_Trace4;
    wxButton* m_3D_Trace;
    wxListCtrl* m_vectiesListCtrl;
    wxPanel* m_panelReplay;
    wxPanel* m_panel7059;
    wxPanel* m_replayPlaceholder;

protected:
    virtual void statisticBookChanged(wxNotebookEvent& event) { event.Skip(); }
    virtual void clearMotionMonitorVecties(wxCommandEvent& event) { event.Skip(); }
    virtual void copyMotionMonitorVecties(wxCommandEvent& event) { event.Skip(); }
    virtual void traceMotionMonitorVecties(wxCommandEvent& event) { event.Skip(); }

public:
    wxListCtrl* GetStatisticSummaryListCtrl() { return m_statisticSummaryListCtrl; }
    wxCheckBox* GetCheckBoxStatisticUpdate() { return m_checkBoxStatisticUpdate; }
    wxPanel* GetStatisticPageSum() { return m_statisticPageSum; }
    wxButton* Get3D_Trace3() { return m_3D_Trace3; }
    wxButton* Get3D_Trace4() { return m_3D_Trace4; }
    wxButton* Get3D_Trace() { return m_3D_Trace; }
    wxListCtrl* GetVectiesListCtrl() { return m_vectiesListCtrl; }
    wxPanel* GetStatisticPageVecties() { return m_statisticPageVecties; }
    wxNotebook* GetStatisticBook() { return m_statisticBook; }
    wxPanel* GetPanelStatistics() { return m_panelStatistics; }
    wxPanel* GetPanel7059() { return m_panel7059; }
    wxPanel* GetReplayPlaceholder() { return m_replayPlaceholder; }
    wxPanel* GetPanelReplay() { return m_panelReplay; }
    wxSimplebook* GetContextBook() { return m_contextBook; }
    CncStatisticsPaneBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxTAB_TRAVERSAL);
    virtual ~CncStatisticsPaneBase();
};


class CncMonitorReplayPaneBase : public wxPanel
{
protected:
    wxComboBox* m_cbStepUnit;
    wxStaticLine* m_staticLine7085;
    wxButton* m_replayStart;
    wxButton* m_replayPrev;
    wxButton* m_replayNext;
    wxButton* m_replayEnd;
    wxStaticLine* m_staticLine7069;
    wxButton* m_replayPlayAll;
    wxButton* m_replayPlayCurrentId;
    wxButton* m_replayPause;
    wxButton* m_replayStop;
    wxTextCtrl* m_currentVertexId;
    wxStaticText* m_staticText7081;
    wxTextCtrl* m_currentVertex;
    wxStaticText* m_staticText7075;
    wxTextCtrl* m_totalVerties;

protected:
    virtual void selectReplayUnit(wxCommandEvent& event) { event.Skip(); }
    virtual void replayStart(wxCommandEvent& event) { event.Skip(); }
    virtual void replayLeftUpPrev(wxMouseEvent& event) { event.Skip(); }
    virtual void replayLeavePrev(wxMouseEvent& event) { event.Skip(); }
    virtual void replayLeftDownPrev(wxMouseEvent& event) { event.Skip(); }
    virtual void replayLeftDClickPrev(wxMouseEvent& event) { event.Skip(); }
    virtual void replayLeftUpNext(wxMouseEvent& event) { event.Skip(); }
    virtual void replayLeaveNext(wxMouseEvent& event) { event.Skip(); }
    virtual void replayLeftDownNext(wxMouseEvent& event) { event.Skip(); }
    virtual void replayLeftDClickNext(wxMouseEvent& event) { event.Skip(); }
    virtual void replayEnd(wxCommandEvent& event) { event.Skip(); }
    virtual void replayPlayAll(wxCommandEvent& event) { event.Skip(); }
    virtual void replayPlayCurrentId(wxCommandEvent& event) { event.Skip(); }
    virtual void replayPause(wxCommandEvent& event) { event.Skip(); }
    virtual void replayStop(wxCommandEvent& event) { event.Skip(); }

public:
    wxComboBox* GetCbStepUnit() { return m_cbStepUnit; }
    wxStaticLine* GetStaticLine7085() { return m_staticLine7085; }
    wxButton* GetReplayStart() { return m_replayStart; }
    wxButton* GetReplayPrev() { return m_replayPrev; }
    wxButton* GetReplayNext() { return m_replayNext; }
    wxButton* GetReplayEnd() { return m_replayEnd; }
    wxStaticLine* GetStaticLine7069() { return m_staticLine7069; }
    wxButton* GetReplayPlayAll() { return m_replayPlayAll; }
    wxButton* GetReplayPlayCurrentId() { return m_replayPlayCurrentId; }
    wxButton* GetReplayPause() { return m_replayPause; }
    wxButton* GetReplayStop() { return m_replayStop; }
    wxTextCtrl* GetCurrentVertexId() { return m_currentVertexId; }
    wxStaticText* GetStaticText7081() { return m_staticText7081; }
    wxTextCtrl* GetCurrentVertex() { return m_currentVertex; }
    wxStaticText* GetStaticText7075() { return m_staticText7075; }
    wxTextCtrl* GetTotalVerties() { return m_totalVerties; }
    CncMonitorReplayPaneBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxTAB_TRAVERSAL);
    virtual ~CncMonitorReplayPaneBase();
};


class CncGamepadControllerStateBase : public wxPanel
{
protected:
    wxListbook* m_listbook7478;
    wxPanel* m_panel7480;
    wxTextCtrl* m_gamepadTrace;
    wxPanel* m_panel7482;
    wxTextCtrl* m_gamepadServiceTrace;
    wxButton* m_btQueryGamepadService;
    wxStaticLine* m_staticLine6051;
    wxButton* m_btStartGamepadService;
    wxButton* m_btStopGamepadService;
    wxButton* m_btClearGamepadServiceTrace;

protected:
    virtual void queryGamepadService(wxCommandEvent& event) { event.Skip(); }
    virtual void startGamepadService(wxCommandEvent& event) { event.Skip(); }
    virtual void stopGamepadService(wxCommandEvent& event) { event.Skip(); }
    virtual void clearGamepadServiceTrace(wxCommandEvent& event) { event.Skip(); }

public:
    wxTextCtrl* GetGamepadTrace() { return m_gamepadTrace; }
    wxPanel* GetPanel7480() { return m_panel7480; }
    wxTextCtrl* GetGamepadServiceTrace() { return m_gamepadServiceTrace; }
    wxButton* GetBtQueryGamepadService() { return m_btQueryGamepadService; }
    wxStaticLine* GetStaticLine6051() { return m_staticLine6051; }
    wxButton* GetBtStartGamepadService() { return m_btStartGamepadService; }
    wxButton* GetBtStopGamepadService() { return m_btStopGamepadService; }
    wxButton* GetBtClearGamepadServiceTrace() { return m_btClearGamepadServiceTrace; }
    wxPanel* GetPanel7482() { return m_panel7482; }
    wxListbook* GetListbook7478() { return m_listbook7478; }
    CncGamepadControllerStateBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,300), long style = wxTAB_TRAVERSAL);
    virtual ~CncGamepadControllerStateBase();
};


class CncSpeedMonitorBase : public wxPanel
{
protected:
    wxBitmapToggleButton* m_btToggleConnection;
    wxStaticLine* m_staticLine75573;
    wxBitmapToggleButton* m_btToggleMeasurePointsAxis;
    wxBitmapToggleButton* m_btToggleConfiguredAxis;
    wxBitmapToggleButton* m_btToggleMeasuredSpeedAxis;
    wxBitmapToggleButton* m_btToggleReceivedSpeedAxis;
    wxStaticText* m_staticText7610;
    wxStaticLine* m_staticLine7557;
    wxBitmapButton* m_btClear;
    wxBitmapButton* m_btSave;
    wxStaticText* m_staticText7534;
    wxSlider* m_intervalSlider;
    wxStaticText* m_staticText7614;
    wxPanel* m_leftAxis;
    wxScrolledWindow* m_scrollWindow;
    wxPanel* m_darwingArea;
    wxPanel* m_rightAxis;
    wxTimer* m_refreshTimer;

protected:
    virtual void toggleConnection(wxCommandEvent& event) { event.Skip(); }
    virtual void toggleMeasurePointsAxis(wxCommandEvent& event) { event.Skip(); }
    virtual void toggleConfiguredAxis(wxCommandEvent& event) { event.Skip(); }
    virtual void toggleMeasuredSpeedAxis(wxCommandEvent& event) { event.Skip(); }
    virtual void toggleReceivedSpeedAxis(wxCommandEvent& event) { event.Skip(); }
    virtual void onClear(wxCommandEvent& event) { event.Skip(); }
    virtual void onSave(wxCommandEvent& event) { event.Skip(); }
    virtual void changeIntervalSlider(wxScrollEvent& event) { event.Skip(); }
    virtual void onPaintLeftAxis(wxPaintEvent& event) { event.Skip(); }
    virtual void onScrolledSize(wxSizeEvent& event) { event.Skip(); }
    virtual void onSize(wxSizeEvent& event) { event.Skip(); }
    virtual void onPaint(wxPaintEvent& event) { event.Skip(); }
    virtual void onMouseMotion(wxMouseEvent& event) { event.Skip(); }
    virtual void onLeftDown(wxMouseEvent& event) { event.Skip(); }
    virtual void onLeftUp(wxMouseEvent& event) { event.Skip(); }
    virtual void onPaintRightAxis(wxPaintEvent& event) { event.Skip(); }
    virtual void onRefreshTimer(wxTimerEvent& event) { event.Skip(); }

public:
    wxBitmapToggleButton* GetBtToggleConnection() { return m_btToggleConnection; }
    wxStaticLine* GetStaticLine75573() { return m_staticLine75573; }
    wxBitmapToggleButton* GetBtToggleMeasurePointsAxis() { return m_btToggleMeasurePointsAxis; }
    wxBitmapToggleButton* GetBtToggleConfiguredAxis() { return m_btToggleConfiguredAxis; }
    wxBitmapToggleButton* GetBtToggleMeasuredSpeedAxis() { return m_btToggleMeasuredSpeedAxis; }
    wxBitmapToggleButton* GetBtToggleReceivedSpeedAxis() { return m_btToggleReceivedSpeedAxis; }
    wxStaticText* GetStaticText7610() { return m_staticText7610; }
    wxStaticLine* GetStaticLine7557() { return m_staticLine7557; }
    wxBitmapButton* GetBtClear() { return m_btClear; }
    wxBitmapButton* GetBtSave() { return m_btSave; }
    wxStaticText* GetStaticText7534() { return m_staticText7534; }
    wxSlider* GetIntervalSlider() { return m_intervalSlider; }
    wxStaticText* GetStaticText7614() { return m_staticText7614; }
    wxPanel* GetLeftAxis() { return m_leftAxis; }
    wxPanel* GetDarwingArea() { return m_darwingArea; }
    wxScrolledWindow* GetScrollWindow() { return m_scrollWindow; }
    wxPanel* GetRightAxis() { return m_rightAxis; }
    wxTimer* GetRefreshTimer() { return m_refreshTimer; }
    CncSpeedMonitorBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,300), long style = wxTAB_TRAVERSAL);
    virtual ~CncSpeedMonitorBase();
};


class CncPreprocessorBase : public wxPanel
{
protected:
    wxListbook* m_listbookPreProcessor;
    wxPanel* m_panel7622;
    wxStaticText* m_staticText61381;
    wxBitmapToggleButton* m_btConnectPathListEntries;
    wxStaticLine* m_staticLine78021113;
    wxBitmapToggleButton* m_btToogleFormat;
    wxStaticLine* m_staticLine780211;
    wxBitmapToggleButton* m_btConsiderClientIdChanges;
    wxBitmapToggleButton* m_btConsiderFeedSpeedChanges;
    wxBitmapToggleButton* m_btConsiderPositionChanges;
    wxStaticLine* m_staticLine7802;
    wxBitmapButton* m_btClearPathListEntries;
    wxListCtrl* m_pathListEntriesPlaceholder;
    wxPanel* m_panel7630;
    wxStaticText* m_staticText613814;
    wxBitmapToggleButton* m_btConnectMoveSequences;
    wxBitmapButton* m_btClearMoveSequences;
    wxListCtrl* m_moveSequencesPlaceholder;

protected:
    virtual void connectPathListEntries(wxCommandEvent& event) { event.Skip(); }
    virtual void clearPathListEntries(wxCommandEvent& event) { event.Skip(); }
    virtual void connectMoveSequences(wxCommandEvent& event) { event.Skip(); }
    virtual void clearMoveSequences(wxCommandEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText61381() { return m_staticText61381; }
    wxBitmapToggleButton* GetBtConnectPathListEntries() { return m_btConnectPathListEntries; }
    wxStaticLine* GetStaticLine78021113() { return m_staticLine78021113; }
    wxBitmapToggleButton* GetBtToogleFormat() { return m_btToogleFormat; }
    wxStaticLine* GetStaticLine780211() { return m_staticLine780211; }
    wxBitmapToggleButton* GetBtConsiderClientIdChanges() { return m_btConsiderClientIdChanges; }
    wxBitmapToggleButton* GetBtConsiderFeedSpeedChanges() { return m_btConsiderFeedSpeedChanges; }
    wxBitmapToggleButton* GetBtConsiderPositionChanges() { return m_btConsiderPositionChanges; }
    wxStaticLine* GetStaticLine7802() { return m_staticLine7802; }
    wxBitmapButton* GetBtClearPathListEntries() { return m_btClearPathListEntries; }
    wxListCtrl* GetPathListEntriesPlaceholder() { return m_pathListEntriesPlaceholder; }
    wxPanel* GetPanel7622() { return m_panel7622; }
    wxStaticText* GetStaticText613814() { return m_staticText613814; }
    wxBitmapToggleButton* GetBtConnectMoveSequences() { return m_btConnectMoveSequences; }
    wxBitmapButton* GetBtClearMoveSequences() { return m_btClearMoveSequences; }
    wxListCtrl* GetMoveSequencesPlaceholder() { return m_moveSequencesPlaceholder; }
    wxPanel* GetPanel7630() { return m_panel7630; }
    wxListbook* GetListbookPreProcessor() { return m_listbookPreProcessor; }
    CncPreprocessorBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(700,700), long style = wxTAB_TRAVERSAL);
    virtual ~CncPreprocessorBase();
};


class CncGameportControllerBase : public wxDialog
{
protected:
    wxPanel* m_gamepadState;
    wxStaticLine* m_staticLine7492;
    wxButton* m_btClose;

protected:
    virtual void onClose(wxCommandEvent& event) { event.Skip(); }

public:
    wxPanel* GetGamepadState() { return m_gamepadState; }
    wxStaticLine* GetStaticLine7492() { return m_staticLine7492; }
    wxButton* GetBtClose() { return m_btClose; }
    CncGameportControllerBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("CNC Gameport Controller"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,300), long style = wxDEFAULT_DIALOG_STYLE|wxSTAY_ON_TOP|wxRESIZE_BORDER);
    virtual ~CncGameportControllerBase();
};


class CncReferencePositionBase : public wxDialog
{
protected:
    wxStaticText* m_staticText5505;
    wxStaticLine* m_staticLine5357;
    wxStaticText* m_staticText5355;
    wxStaticBitmap* m_staticBitmap5844;
    wxRadioBox* m_rbStepSensitivity;
    wxPanel* m_navigationPanelPlaceholder;
    wxStaticLine* m_staticLine535015;
    wxStaticBitmap* m_staticBitmap5847;
    wxStaticText* m_staticText5340;
    wxStaticText* m_modeSelected;
    wxStaticText* m_modeText;
    wxStaticText* m_staticText5460;
    wxBitmapToggleButton* m_btMode1;
    wxStaticText* m_staticText5467;
    wxBitmapToggleButton* m_btMode2;
    wxStaticText* m_staticText5469;
    wxBitmapToggleButton* m_btMode3;
    wxStaticText* m_staticText5471;
    wxBitmapToggleButton* m_btMode4;
    wxStaticText* m_staticText5473;
    wxBitmapToggleButton* m_btMode5;
    wxStaticText* m_staticText5475;
    wxBitmapToggleButton* m_btMode6;
    wxStaticLine* m_staticLine53501;
    wxStaticText* m_staticText5486;
    wxTextCtrl* m_workpiceThickness;
    wxStaticText* m_staticText5497;
    wxStaticText* m_staticText5488;
    wxTextCtrl* m_measurePlateThickness;
    wxStaticText* m_staticText5499;
    wxStaticLine* m_staticLine5350;
    wxStaticBitmap* m_infoBitmap;
    wxSimplebook* m_infoResultBook;
    wxPanel* m_panel7418;
    wxStaticLine* m_staticLine74384;
    wxStaticText* m_staticText7442;
    wxStaticText* m_staticText7444;
    wxStaticText* m_staticText7446;
    wxBitmapToggleButton* m_btZeroX;
    wxBitmapToggleButton* m_btZeroY;
    wxBitmapToggleButton* m_btZeroZ;
    wxStaticLine* m_staticLine7438;
    wxButton* m_btSet;
    wxButton* m_btCancel;
    wxPanel* m_panel7416;
    wxTextCtrl* m_textMessage;
    wxButton* m_button7425;
    wxStaticLine* m_staticLine7451;
    wxTimer* m_infoTimer;

protected:
    virtual void init(wxInitDialogEvent& event) { event.Skip(); }
    virtual void show(wxShowEvent& event) { event.Skip(); }
    virtual void selectStepSensitivity(wxCommandEvent& event) { event.Skip(); }
    virtual void mode1(wxCommandEvent& event) { event.Skip(); }
    virtual void mode2(wxCommandEvent& event) { event.Skip(); }
    virtual void mode3(wxCommandEvent& event) { event.Skip(); }
    virtual void mode4(wxCommandEvent& event) { event.Skip(); }
    virtual void mode5(wxCommandEvent& event) { event.Skip(); }
    virtual void mode6(wxCommandEvent& event) { event.Skip(); }
    virtual void selectInformation(wxMouseEvent& event) { event.Skip(); }
    virtual void toggleZeroX(wxCommandEvent& event) { event.Skip(); }
    virtual void toggleZeroY(wxCommandEvent& event) { event.Skip(); }
    virtual void toggleZeroZ(wxCommandEvent& event) { event.Skip(); }
    virtual void set(wxCommandEvent& event) { event.Skip(); }
    virtual void cancel(wxCommandEvent& event) { event.Skip(); }
    virtual void hideInformation(wxCommandEvent& event) { event.Skip(); }
    virtual void infoTimer(wxTimerEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText5505() { return m_staticText5505; }
    wxStaticLine* GetStaticLine5357() { return m_staticLine5357; }
    wxStaticText* GetStaticText5355() { return m_staticText5355; }
    wxStaticBitmap* GetStaticBitmap5844() { return m_staticBitmap5844; }
    wxRadioBox* GetRbStepSensitivity() { return m_rbStepSensitivity; }
    wxPanel* GetNavigationPanelPlaceholder() { return m_navigationPanelPlaceholder; }
    wxStaticLine* GetStaticLine535015() { return m_staticLine535015; }
    wxStaticBitmap* GetStaticBitmap5847() { return m_staticBitmap5847; }
    wxStaticText* GetStaticText5340() { return m_staticText5340; }
    wxStaticText* GetModeSelected() { return m_modeSelected; }
    wxStaticText* GetModeText() { return m_modeText; }
    wxStaticText* GetStaticText5460() { return m_staticText5460; }
    wxBitmapToggleButton* GetBtMode1() { return m_btMode1; }
    wxStaticText* GetStaticText5467() { return m_staticText5467; }
    wxBitmapToggleButton* GetBtMode2() { return m_btMode2; }
    wxStaticText* GetStaticText5469() { return m_staticText5469; }
    wxBitmapToggleButton* GetBtMode3() { return m_btMode3; }
    wxStaticText* GetStaticText5471() { return m_staticText5471; }
    wxBitmapToggleButton* GetBtMode4() { return m_btMode4; }
    wxStaticText* GetStaticText5473() { return m_staticText5473; }
    wxBitmapToggleButton* GetBtMode5() { return m_btMode5; }
    wxStaticText* GetStaticText5475() { return m_staticText5475; }
    wxBitmapToggleButton* GetBtMode6() { return m_btMode6; }
    wxStaticLine* GetStaticLine53501() { return m_staticLine53501; }
    wxStaticText* GetStaticText5486() { return m_staticText5486; }
    wxTextCtrl* GetWorkpiceThickness() { return m_workpiceThickness; }
    wxStaticText* GetStaticText5497() { return m_staticText5497; }
    wxStaticText* GetStaticText5488() { return m_staticText5488; }
    wxTextCtrl* GetMeasurePlateThickness() { return m_measurePlateThickness; }
    wxStaticText* GetStaticText5499() { return m_staticText5499; }
    wxStaticLine* GetStaticLine5350() { return m_staticLine5350; }
    wxStaticBitmap* GetInfoBitmap() { return m_infoBitmap; }
    wxStaticLine* GetStaticLine74384() { return m_staticLine74384; }
    wxStaticText* GetStaticText7442() { return m_staticText7442; }
    wxStaticText* GetStaticText7444() { return m_staticText7444; }
    wxStaticText* GetStaticText7446() { return m_staticText7446; }
    wxBitmapToggleButton* GetBtZeroX() { return m_btZeroX; }
    wxBitmapToggleButton* GetBtZeroY() { return m_btZeroY; }
    wxBitmapToggleButton* GetBtZeroZ() { return m_btZeroZ; }
    wxStaticLine* GetStaticLine7438() { return m_staticLine7438; }
    wxButton* GetBtSet() { return m_btSet; }
    wxButton* GetBtCancel() { return m_btCancel; }
    wxPanel* GetPanel7418() { return m_panel7418; }
    wxTextCtrl* GetTextMessage() { return m_textMessage; }
    wxButton* GetButton7425() { return m_button7425; }
    wxPanel* GetPanel7416() { return m_panel7416; }
    wxSimplebook* GetInfoResultBook() { return m_infoResultBook; }
    wxStaticLine* GetStaticLine7451() { return m_staticLine7451; }
    wxTimer* GetInfoTimer() { return m_infoTimer; }
    CncReferencePositionBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("CNC Reference Position (0, 0, 0)"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_DIALOG_STYLE|wxSTAY_ON_TOP);
    virtual ~CncReferencePositionBase();
};


class CncConnectProgressBase : public wxDialog
{
protected:
    wxTimer* m_observeTimer;
    wxTimer* m_startupTimer;
    wxStaticBitmap* m_staticBitmap5593;
    wxStaticText* m_staticText5589;
    wxPanel* m_connectActivityPanel;

protected:
    virtual void initDialog(wxInitDialogEvent& event) { event.Skip(); }
    virtual void show(wxShowEvent& event) { event.Skip(); }
    virtual void observeTimer(wxTimerEvent& event) { event.Skip(); }
    virtual void startupTimer(wxTimerEvent& event) { event.Skip(); }

public:
    wxTimer* GetObserveTimer() { return m_observeTimer; }
    wxTimer* GetStartupTimer() { return m_startupTimer; }
    wxStaticBitmap* GetStaticBitmap5593() { return m_staticBitmap5593; }
    wxStaticText* GetStaticText5589() { return m_staticText5589; }
    wxPanel* GetConnectActivityPanel() { return m_connectActivityPanel; }
    CncConnectProgressBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("CNC Serial Connect Progress"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxSTAY_ON_TOP|wxCAPTION);
    virtual ~CncConnectProgressBase();
};


class CncUsbConnectionDetectedBase : public wxDialog
{
protected:
    wxStaticBitmap* m_staticBitmap5919;
    wxStaticText* m_staticText5921;
    wxStaticText* m_portName;
    wxButton* m_ignore;
    wxButton* m_connect;

protected:
    virtual void initDilaog(wxInitDialogEvent& event) { event.Skip(); }
    virtual void ignore(wxCommandEvent& event) { event.Skip(); }
    virtual void connect(wxCommandEvent& event) { event.Skip(); }

public:
    wxStaticBitmap* GetStaticBitmap5919() { return m_staticBitmap5919; }
    wxStaticText* GetStaticText5921() { return m_staticText5921; }
    wxStaticText* GetPortName() { return m_portName; }
    wxButton* GetIgnore() { return m_ignore; }
    wxButton* GetConnect() { return m_connect; }
    CncUsbConnectionDetectedBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("New controller connection is available . . ."), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,300), long style = wxDEFAULT_DIALOG_STYLE);
    virtual ~CncUsbConnectionDetectedBase();
};


class CncSecureRunBase : public wxDialog
{
protected:
    wxPanel* m_header1;
    wxStaticText* m_staticText6588;
    wxPanel* m_header2;
    wxStaticText* m_staticText65883;
    wxStaticLine* m_staticLine527312;
    wxPanel* m_remoteControl;
    wxStaticLine* m_staticLine52731;
    wxButton* m_btPlay;
    wxButton* m_btStop;
    wxStaticLine* m_staticLine52733;
    wxButton* m_btEmergengy;
    wxStaticLine* m_staticLine5273;
    wxStaticLine* m_staticLine6571;
    wxBitmapToggleButton* m_btViewTop;
    wxBitmapToggleButton* m_btViewBottom;
    wxBitmapToggleButton* m_btViewFront;
    wxBitmapToggleButton* m_btViewRear;
    wxBitmapToggleButton* m_btViewLeft;
    wxBitmapToggleButton* m_btViewRight;
    wxBitmapToggleButton* m_btViewIso1;
    wxBitmapToggleButton* m_btViewIso2;
    wxBitmapToggleButton* m_btViewIso3;
    wxBitmapToggleButton* m_btViewIso4;
    wxTimer* m_startupTimer;
    wxTimer* m_blinkTimer;

protected:
    virtual void initDialog(wxInitDialogEvent& event) { event.Skip(); }
    virtual void show(wxShowEvent& event) { event.Skip(); }
    virtual void onKeyDown(wxKeyEvent& event) { event.Skip(); }
    virtual void play(wxCommandEvent& event) { event.Skip(); }
    virtual void stop(wxCommandEvent& event) { event.Skip(); }
    virtual void emergengy(wxCommandEvent& event) { event.Skip(); }
    virtual void changeView(wxCommandEvent& event) { event.Skip(); }
    virtual void startupTimer(wxTimerEvent& event) { event.Skip(); }
    virtual void blinkTimer(wxTimerEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText6588() { return m_staticText6588; }
    wxPanel* GetHeader1() { return m_header1; }
    wxStaticText* GetStaticText65883() { return m_staticText65883; }
    wxPanel* GetHeader2() { return m_header2; }
    wxStaticLine* GetStaticLine527312() { return m_staticLine527312; }
    wxPanel* GetRemoteControl() { return m_remoteControl; }
    wxStaticLine* GetStaticLine52731() { return m_staticLine52731; }
    wxButton* GetBtPlay() { return m_btPlay; }
    wxButton* GetBtStop() { return m_btStop; }
    wxStaticLine* GetStaticLine52733() { return m_staticLine52733; }
    wxButton* GetBtEmergengy() { return m_btEmergengy; }
    wxStaticLine* GetStaticLine5273() { return m_staticLine5273; }
    wxStaticLine* GetStaticLine6571() { return m_staticLine6571; }
    wxBitmapToggleButton* GetBtViewTop() { return m_btViewTop; }
    wxBitmapToggleButton* GetBtViewBottom() { return m_btViewBottom; }
    wxBitmapToggleButton* GetBtViewFront() { return m_btViewFront; }
    wxBitmapToggleButton* GetBtViewRear() { return m_btViewRear; }
    wxBitmapToggleButton* GetBtViewLeft() { return m_btViewLeft; }
    wxBitmapToggleButton* GetBtViewRight() { return m_btViewRight; }
    wxBitmapToggleButton* GetBtViewIso1() { return m_btViewIso1; }
    wxBitmapToggleButton* GetBtViewIso2() { return m_btViewIso2; }
    wxBitmapToggleButton* GetBtViewIso3() { return m_btViewIso3; }
    wxBitmapToggleButton* GetBtViewIso4() { return m_btViewIso4; }
    wxTimer* GetStartupTimer() { return m_startupTimer; }
    wxTimer* GetBlinkTimer() { return m_blinkTimer; }
    CncSecureRunBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("CNC Secure Run"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxSTAY_ON_TOP);
    virtual ~CncSecureRunBase();
};


class UnitTestsBase : public wxDialog
{
protected:
    wxStaticText* m_staticText3357;
    wxComboBox* m_unitTestSelector;
    wxButton* m_btUnitTestClear;
    wxButton* m_btUnitTestRun;
    wxTextCtrl* m_testResultStream;
    wxStaticText* m_unitTestStatus;
    wxCheckBox* m_unitTestFreezeOutput;
    wxCheckBox* m_unitTestAutoRun;
    wxTimer* m_unitTestStartupTimer;

protected:
    virtual void onShow(wxShowEvent& event) { event.Skip(); }
    virtual void selectTest(wxCommandEvent& event) { event.Skip(); }
    virtual void clearView(wxCommandEvent& event) { event.Skip(); }
    virtual void onStartupTimer(wxTimerEvent& event) { event.Skip(); }

public:
    wxStaticText* GetStaticText3357() { return m_staticText3357; }
    wxComboBox* GetUnitTestSelector() { return m_unitTestSelector; }
    wxButton* GetBtUnitTestClear() { return m_btUnitTestClear; }
    wxButton* GetBtUnitTestRun() { return m_btUnitTestRun; }
    wxTextCtrl* GetTestResultStream() { return m_testResultStream; }
    wxStaticText* GetUnitTestStatus() { return m_unitTestStatus; }
    wxCheckBox* GetUnitTestFreezeOutput() { return m_unitTestFreezeOutput; }
    wxCheckBox* GetUnitTestAutoRun() { return m_unitTestAutoRun; }
    wxTimer* GetUnitTestStartupTimer() { return m_unitTestStartupTimer; }
    UnitTestsBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("CNC Controller Unit Tests . . ."), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(800,600), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxSYSTEM_MENU|wxCLOSE_BOX);
    virtual ~UnitTestsBase();
};


class CncMessageDialogBase : public wxDialog
{
protected:
    wxStaticBitmap* m_staticBitmap7188;
    wxStaticText* m_headline;
    wxBitmapToggleButton* m_btToggleWordWrap;
    wxStyledTextCtrl* m_message;
    wxButton* m_btClose;

protected:
    virtual void onInitDialog(wxInitDialogEvent& event) { event.Skip(); }
    virtual void onWordWrap(wxCommandEvent& event) { event.Skip(); }
    virtual void close(wxCommandEvent& event) { event.Skip(); }

public:
    wxStaticBitmap* GetStaticBitmap7188() { return m_staticBitmap7188; }
    wxStaticText* GetHeadline() { return m_headline; }
    wxBitmapToggleButton* GetBtToggleWordWrap() { return m_btToggleWordWrap; }
    wxStyledTextCtrl* GetMessage() { return m_message; }
    wxButton* GetBtClose() { return m_btClose; }
    CncMessageDialogBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Cnc Message Dialog"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,300), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~CncMessageDialogBase();
};


class CncOSEnvironmentDialogBase : public wxDialog
{
protected:
    wxListbook* m_listbook;
    wxPanel* m_panelOSEnvironment;
    wxListCtrl* m_osEnvironmentList;
    wxStaticText* m_staticText7294;
    wxTextCtrl* m_osEnvParam;
    wxStaticText* m_staticText7296;
    wxTextCtrl* m_osEnvValue;
    wxPanel* m_paneAppEnvironment;
    wxListCtrl* m_appEnvironmentList;
    wxStaticText* m_staticText72942;
    wxTextCtrl* m_appEnvParam;
    wxStaticText* m_staticText72964;
    wxTextCtrl* m_appEnvValue;
    wxPanel* m_panelModules;
    wxRadioBox* m_modulesSortedBy;
    wxListCtrl* m_moduleList;
    wxStaticText* m_staticText7315;
    wxTextCtrl* m_modAddress;
    wxStaticText* m_staticText7319;
    wxTextCtrl* m_modName;
    wxStaticText* m_staticText7323;
    wxTextCtrl* m_modVersion;
    wxStaticText* m_staticText7327;
    wxTextCtrl* m_modPath;
    wxStaticLine* m_staticLine7334;
    wxButton* m_btClose;

protected:
    virtual void onSize(wxSizeEvent& event) { event.Skip(); }
    virtual void selectOSEnvironmentItem(wxListEvent& event) { event.Skip(); }
    virtual void selectAppEnvironmentItem(wxListEvent& event) { event.Skip(); }
    virtual void sortModules(wxCommandEvent& event) { event.Skip(); }
    virtual void selectModulesItem(wxListEvent& event) { event.Skip(); }
    virtual void onClose(wxCommandEvent& event) { event.Skip(); }

public:
    wxListCtrl* GetOsEnvironmentList() { return m_osEnvironmentList; }
    wxStaticText* GetStaticText7294() { return m_staticText7294; }
    wxTextCtrl* GetOsEnvParam() { return m_osEnvParam; }
    wxStaticText* GetStaticText7296() { return m_staticText7296; }
    wxTextCtrl* GetOsEnvValue() { return m_osEnvValue; }
    wxPanel* GetPanelOSEnvironment() { return m_panelOSEnvironment; }
    wxListCtrl* GetAppEnvironmentList() { return m_appEnvironmentList; }
    wxStaticText* GetStaticText72942() { return m_staticText72942; }
    wxTextCtrl* GetAppEnvParam() { return m_appEnvParam; }
    wxStaticText* GetStaticText72964() { return m_staticText72964; }
    wxTextCtrl* GetAppEnvValue() { return m_appEnvValue; }
    wxPanel* GetPaneAppEnvironment() { return m_paneAppEnvironment; }
    wxRadioBox* GetModulesSortedBy() { return m_modulesSortedBy; }
    wxListCtrl* GetModuleList() { return m_moduleList; }
    wxStaticText* GetStaticText7315() { return m_staticText7315; }
    wxTextCtrl* GetModAddress() { return m_modAddress; }
    wxStaticText* GetStaticText7319() { return m_staticText7319; }
    wxTextCtrl* GetModName() { return m_modName; }
    wxStaticText* GetStaticText7323() { return m_staticText7323; }
    wxTextCtrl* GetModVersion() { return m_modVersion; }
    wxStaticText* GetStaticText7327() { return m_staticText7327; }
    wxTextCtrl* GetModPath() { return m_modPath; }
    wxPanel* GetPanelModules() { return m_panelModules; }
    wxListbook* GetListbook() { return m_listbook; }
    wxStaticLine* GetStaticLine7334() { return m_staticLine7334; }
    wxButton* GetBtClose() { return m_btClose; }
    CncOSEnvironmentDialogBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Cnc Application Environment"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,600), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~CncOSEnvironmentDialogBase();
};


class ImageLib16 : public wxImageList
{
protected:
    // Maintain a map of all bitmaps representd by their name
    std::map<wxString, wxBitmap> m_bitmaps;
    // The requested image resolution (can be one of @2x, @1.5x, @1.25x or an empty string (the default)
    wxString m_resolution;
    int m_imagesWidth;
    int m_imagesHeight;


protected:

public:
    ImageLib16();
    const wxBitmap& Bitmap(const wxString &name) const {
        if ( !m_bitmaps.count(name + m_resolution) )
            return wxNullBitmap;
        return m_bitmaps.find(name + m_resolution)->second;
    }

    void SetBitmapResolution(const wxString &res = wxEmptyString) {
        m_resolution = res;
    }

    virtual ~ImageLib16();
};


class ImageLib24 : public wxImageList
{
protected:
    // Maintain a map of all bitmaps representd by their name
    std::map<wxString, wxBitmap> m_bitmaps;
    // The requested image resolution (can be one of @2x, @1.5x, @1.25x or an empty string (the default)
    wxString m_resolution;
    int m_imagesWidth;
    int m_imagesHeight;


protected:

public:
    ImageLib24();
    const wxBitmap& Bitmap(const wxString &name) const {
        if ( !m_bitmaps.count(name + m_resolution) )
            return wxNullBitmap;
        return m_bitmaps.find(name + m_resolution)->second;
    }

    void SetBitmapResolution(const wxString &res = wxEmptyString) {
        m_resolution = res;
    }

    virtual ~ImageLib24();
};


class ImageLibFile : public wxImageList
{
protected:
    // Maintain a map of all bitmaps representd by their name
    std::map<wxString, wxBitmap> m_bitmaps;
    // The requested image resolution (can be one of @2x, @1.5x, @1.25x or an empty string (the default)
    wxString m_resolution;
    int m_imagesWidth;
    int m_imagesHeight;


protected:

public:
    ImageLibFile();
    const wxBitmap& Bitmap(const wxString &name) const {
        if ( !m_bitmaps.count(name + m_resolution) )
            return wxNullBitmap;
        return m_bitmaps.find(name + m_resolution)->second;
    }

    void SetBitmapResolution(const wxString &res = wxEmptyString) {
        m_resolution = res;
    }

    virtual ~ImageLibFile();
};


class ImageLibBig : public wxImageList
{
protected:
    // Maintain a map of all bitmaps representd by their name
    std::map<wxString, wxBitmap> m_bitmaps;
    // The requested image resolution (can be one of @2x, @1.5x, @1.25x or an empty string (the default)
    wxString m_resolution;
    int m_imagesWidth;
    int m_imagesHeight;


protected:

public:
    ImageLibBig();
    const wxBitmap& Bitmap(const wxString &name) const {
        if ( !m_bitmaps.count(name + m_resolution) )
            return wxNullBitmap;
        return m_bitmaps.find(name + m_resolution)->second;
    }

    void SetBitmapResolution(const wxString &res = wxEmptyString) {
        m_resolution = res;
    }

    virtual ~ImageLibBig();
};


class ImageLibPortSelector : public wxImageList
{
protected:
    // Maintain a map of all bitmaps representd by their name
    std::map<wxString, wxBitmap> m_bitmaps;
    // The requested image resolution (can be one of @2x, @1.5x, @1.25x or an empty string (the default)
    wxString m_resolution;
    int m_imagesWidth;
    int m_imagesHeight;


protected:

public:
    ImageLibPortSelector();
    const wxBitmap& Bitmap(const wxString &name) const {
        if ( !m_bitmaps.count(name + m_resolution) )
            return wxNullBitmap;
        return m_bitmaps.find(name + m_resolution)->second;
    }

    void SetBitmapResolution(const wxString &res = wxEmptyString) {
        m_resolution = res;
    }

    virtual ~ImageLibPortSelector();
};


class ImageLibAppIcons : public wxImageList
{
protected:
    // Maintain a map of all bitmaps representd by their name
    std::map<wxString, wxBitmap> m_bitmaps;
    // The requested image resolution (can be one of @2x, @1.5x, @1.25x or an empty string (the default)
    wxString m_resolution;
    int m_imagesWidth;
    int m_imagesHeight;


protected:

public:
    ImageLibAppIcons();
    const wxBitmap& Bitmap(const wxString &name) const {
        if ( !m_bitmaps.count(name + m_resolution) )
            return wxNullBitmap;
        return m_bitmaps.find(name + m_resolution)->second;
    }

    void SetBitmapResolution(const wxString &res = wxEmptyString) {
        m_resolution = res;
    }

    virtual ~ImageLibAppIcons();
};


class ImageLibDebugger : public wxImageList
{
protected:
    // Maintain a map of all bitmaps representd by their name
    std::map<wxString, wxBitmap> m_bitmaps;
    // The requested image resolution (can be one of @2x, @1.5x, @1.25x or an empty string (the default)
    wxString m_resolution;
    int m_imagesWidth;
    int m_imagesHeight;


protected:

public:
    ImageLibDebugger();
    const wxBitmap& Bitmap(const wxString &name) const {
        if ( !m_bitmaps.count(name + m_resolution) )
            return wxNullBitmap;
        return m_bitmaps.find(name + m_resolution)->second;
    }

    void SetBitmapResolution(const wxString &res = wxEmptyString) {
        m_resolution = res;
    }

    virtual ~ImageLibDebugger();
};


class ImageLibConfig : public wxImageList
{
protected:
    // Maintain a map of all bitmaps representd by their name
    std::map<wxString, wxBitmap> m_bitmaps;
    // The requested image resolution (can be one of @2x, @1.5x, @1.25x or an empty string (the default)
    wxString m_resolution;
    int m_imagesWidth;
    int m_imagesHeight;


protected:

public:
    ImageLibConfig();
    const wxBitmap& Bitmap(const wxString &name) const {
        if ( !m_bitmaps.count(name + m_resolution) )
            return wxNullBitmap;
        return m_bitmaps.find(name + m_resolution)->second;
    }

    void SetBitmapResolution(const wxString &res = wxEmptyString) {
        m_resolution = res;
    }

    virtual ~ImageLibConfig();
};


class ImageLibPosSpy : public wxImageList
{
protected:
    // Maintain a map of all bitmaps representd by their name
    std::map<wxString, wxBitmap> m_bitmaps;
    // The requested image resolution (can be one of @2x, @1.5x, @1.25x or an empty string (the default)
    wxString m_resolution;
    int m_imagesWidth;
    int m_imagesHeight;


protected:

public:
    ImageLibPosSpy();
    const wxBitmap& Bitmap(const wxString &name) const {
        if ( !m_bitmaps.count(name + m_resolution) )
            return wxNullBitmap;
        return m_bitmaps.find(name + m_resolution)->second;
    }

    void SetBitmapResolution(const wxString &res = wxEmptyString) {
        m_resolution = res;
    }

    virtual ~ImageLibPosSpy();
};


class ImageLibSetterList : public wxImageList
{
protected:
    // Maintain a map of all bitmaps representd by their name
    std::map<wxString, wxBitmap> m_bitmaps;
    // The requested image resolution (can be one of @2x, @1.5x, @1.25x or an empty string (the default)
    wxString m_resolution;
    int m_imagesWidth;
    int m_imagesHeight;


protected:

public:
    ImageLibSetterList();
    const wxBitmap& Bitmap(const wxString &name) const {
        if ( !m_bitmaps.count(name + m_resolution) )
            return wxNullBitmap;
        return m_bitmaps.find(name + m_resolution)->second;
    }

    void SetBitmapResolution(const wxString &res = wxEmptyString) {
        m_resolution = res;
    }

    virtual ~ImageLibSetterList();
};


class ImageLibProbe : public wxImageList
{
protected:
    // Maintain a map of all bitmaps representd by their name
    std::map<wxString, wxBitmap> m_bitmaps;
    // The requested image resolution (can be one of @2x, @1.5x, @1.25x or an empty string (the default)
    wxString m_resolution;
    int m_imagesWidth;
    int m_imagesHeight;


protected:

public:
    ImageLibProbe();
    const wxBitmap& Bitmap(const wxString &name) const {
        if ( !m_bitmaps.count(name + m_resolution) )
            return wxNullBitmap;
        return m_bitmaps.find(name + m_resolution)->second;
    }

    void SetBitmapResolution(const wxString &res = wxEmptyString) {
        m_resolution = res;
    }

    virtual ~ImageLibProbe();
};


class ImageLibStatistics : public wxImageList
{
protected:
    // Maintain a map of all bitmaps representd by their name
    std::map<wxString, wxBitmap> m_bitmaps;
    // The requested image resolution (can be one of @2x, @1.5x, @1.25x or an empty string (the default)
    wxString m_resolution;
    int m_imagesWidth;
    int m_imagesHeight;


protected:

public:
    ImageLibStatistics();
    const wxBitmap& Bitmap(const wxString &name) const {
        if ( !m_bitmaps.count(name + m_resolution) )
            return wxNullBitmap;
        return m_bitmaps.find(name + m_resolution)->second;
    }

    void SetBitmapResolution(const wxString &res = wxEmptyString) {
        m_resolution = res;
    }

    virtual ~ImageLibStatistics();
};


class ImageLibSummary : public wxImageList
{
protected:
    // Maintain a map of all bitmaps representd by their name
    std::map<wxString, wxBitmap> m_bitmaps;
    // The requested image resolution (can be one of @2x, @1.5x, @1.25x or an empty string (the default)
    wxString m_resolution;
    int m_imagesWidth;
    int m_imagesHeight;


protected:

public:
    ImageLibSummary();
    const wxBitmap& Bitmap(const wxString &name) const {
        if ( !m_bitmaps.count(name + m_resolution) )
            return wxNullBitmap;
        return m_bitmaps.find(name + m_resolution)->second;
    }

    void SetBitmapResolution(const wxString &res = wxEmptyString) {
        m_resolution = res;
    }

    virtual ~ImageLibSummary();
};


class ImageLibPerspective : public wxImageList
{
protected:
    // Maintain a map of all bitmaps representd by their name
    std::map<wxString, wxBitmap> m_bitmaps;
    // The requested image resolution (can be one of @2x, @1.5x, @1.25x or an empty string (the default)
    wxString m_resolution;
    int m_imagesWidth;
    int m_imagesHeight;


protected:

public:
    ImageLibPerspective();
    const wxBitmap& Bitmap(const wxString &name) const {
        if ( !m_bitmaps.count(name + m_resolution) )
            return wxNullBitmap;
        return m_bitmaps.find(name + m_resolution)->second;
    }

    void SetBitmapResolution(const wxString &res = wxEmptyString) {
        m_resolution = res;
    }

    virtual ~ImageLibPerspective();
};


class ImageLibHeartbeat : public wxImageList
{
protected:
    // Maintain a map of all bitmaps representd by their name
    std::map<wxString, wxBitmap> m_bitmaps;
    // The requested image resolution (can be one of @2x, @1.5x, @1.25x or an empty string (the default)
    wxString m_resolution;
    int m_imagesWidth;
    int m_imagesHeight;


protected:

public:
    ImageLibHeartbeat();
    const wxBitmap& Bitmap(const wxString &name) const {
        if ( !m_bitmaps.count(name + m_resolution) )
            return wxNullBitmap;
        return m_bitmaps.find(name + m_resolution)->second;
    }

    void SetBitmapResolution(const wxString &res = wxEmptyString) {
        m_resolution = res;
    }

    virtual ~ImageLibHeartbeat();
};


class ImageLibSecureRun : public wxImageList
{
protected:
    // Maintain a map of all bitmaps representd by their name
    std::map<wxString, wxBitmap> m_bitmaps;
    // The requested image resolution (can be one of @2x, @1.5x, @1.25x or an empty string (the default)
    wxString m_resolution;
    int m_imagesWidth;
    int m_imagesHeight;


protected:

public:
    ImageLibSecureRun();
    const wxBitmap& Bitmap(const wxString &name) const {
        if ( !m_bitmaps.count(name + m_resolution) )
            return wxNullBitmap;
        return m_bitmaps.find(name + m_resolution)->second;
    }

    void SetBitmapResolution(const wxString &res = wxEmptyString) {
        m_resolution = res;
    }

    virtual ~ImageLibSecureRun();
};


class ImageLibSpeed : public wxImageList
{
protected:
    // Maintain a map of all bitmaps representd by their name
    std::map<wxString, wxBitmap> m_bitmaps;
    // The requested image resolution (can be one of @2x, @1.5x, @1.25x or an empty string (the default)
    wxString m_resolution;
    int m_imagesWidth;
    int m_imagesHeight;


protected:

public:
    ImageLibSpeed();
    const wxBitmap& Bitmap(const wxString &name) const {
        if ( !m_bitmaps.count(name + m_resolution) )
            return wxNullBitmap;
        return m_bitmaps.find(name + m_resolution)->second;
    }

    void SetBitmapResolution(const wxString &res = wxEmptyString) {
        m_resolution = res;
    }

    virtual ~ImageLibSpeed();
};


class ImageLibGamepad : public wxImageList
{
protected:
    // Maintain a map of all bitmaps representd by their name
    std::map<wxString, wxBitmap> m_bitmaps;
    // The requested image resolution (can be one of @2x, @1.5x, @1.25x or an empty string (the default)
    wxString m_resolution;
    int m_imagesWidth;
    int m_imagesHeight;


protected:

public:
    ImageLibGamepad();
    const wxBitmap& Bitmap(const wxString &name) const {
        if ( !m_bitmaps.count(name + m_resolution) )
            return wxNullBitmap;
        return m_bitmaps.find(name + m_resolution)->second;
    }

    void SetBitmapResolution(const wxString &res = wxEmptyString) {
        m_resolution = res;
    }

    virtual ~ImageLibGamepad();
};


class ImageLibPathList : public wxImageList
{
protected:
    // Maintain a map of all bitmaps representd by their name
    std::map<wxString, wxBitmap> m_bitmaps;
    // The requested image resolution (can be one of @2x, @1.5x, @1.25x or an empty string (the default)
    wxString m_resolution;
    int m_imagesWidth;
    int m_imagesHeight;


protected:

public:
    ImageLibPathList();
    const wxBitmap& Bitmap(const wxString &name) const {
        if ( !m_bitmaps.count(name + m_resolution) )
            return wxNullBitmap;
        return m_bitmaps.find(name + m_resolution)->second;
    }

    void SetBitmapResolution(const wxString &res = wxEmptyString) {
        m_resolution = res;
    }

    virtual ~ImageLibPathList();
};

#endif
