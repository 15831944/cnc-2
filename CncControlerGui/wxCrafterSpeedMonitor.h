//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: wxCrafterSpeedMonitor.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef _CNCGUICONTROLLER_CNCCONTROLERGUI_WXCRAFTERSPEEDMONITOR_BASE_CLASSES_H
#define _CNCGUICONTROLLER_CNCCONTROLERGUI_WXCRAFTERSPEEDMONITOR_BASE_CLASSES_H

#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/panel.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/tglbtn.h>
#include <wx/button.h>
#include <wx/statline.h>
#include <wx/stattext.h>
#include <wx/bmpbuttn.h>
#include <wx/slider.h>
#include <wx/scrolwin.h>
#include <wx/timer.h>
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/treebook.h>
#endif

#ifdef WXC_FROM_DIP
#undef WXC_FROM_DIP
#endif
#if wxVERSION_NUMBER >= 3100
#define WXC_FROM_DIP(x) wxWindow::FromDIP(x, NULL)
#else
#define WXC_FROM_DIP(x) x
#endif


class CncSpeedMonitorBase : public wxPanel
{
protected:
    wxBitmapToggleButton* m_btToggleConnection;
    wxStaticLine* m_staticLine75573;
    wxBitmapToggleButton* m_btToggleMeasurePointsAxis;
    wxBitmapToggleButton* m_btToggleConfiguredAxis;
    wxBitmapToggleButton* m_btToggleMeasuredSpeedAxis;
    wxBitmapToggleButton* m_btToggleReceivedSpeedAxis;
    wxStaticText* m_staticText7610;
    wxStaticLine* m_staticLine7557;
    wxBitmapButton* m_btClear;
    wxBitmapButton* m_btSave;
    wxStaticText* m_staticText7534;
    wxSlider* m_intervalSlider;
    wxStaticText* m_staticText7614;
    wxPanel* m_leftAxis;
    wxScrolledWindow* m_scrollWindow;
    wxPanel* m_darwingArea;
    wxPanel* m_rightAxis;
    wxTimer* m_refreshTimer;

protected:
    virtual void toggleConnection(wxCommandEvent& event) { event.Skip(); }
    virtual void toggleMeasurePointsAxis(wxCommandEvent& event) { event.Skip(); }
    virtual void toggleConfiguredAxis(wxCommandEvent& event) { event.Skip(); }
    virtual void toggleMeasuredSpeedAxis(wxCommandEvent& event) { event.Skip(); }
    virtual void toggleReceivedSpeedAxis(wxCommandEvent& event) { event.Skip(); }
    virtual void onClear(wxCommandEvent& event) { event.Skip(); }
    virtual void onSave(wxCommandEvent& event) { event.Skip(); }
    virtual void changeIntervalSlider(wxScrollEvent& event) { event.Skip(); }
    virtual void onPaintLeftAxis(wxPaintEvent& event) { event.Skip(); }
    virtual void onScrolledSize(wxSizeEvent& event) { event.Skip(); }
    virtual void onSize(wxSizeEvent& event) { event.Skip(); }
    virtual void onPaint(wxPaintEvent& event) { event.Skip(); }
    virtual void onMouseMotion(wxMouseEvent& event) { event.Skip(); }
    virtual void onLeftDown(wxMouseEvent& event) { event.Skip(); }
    virtual void onLeftUp(wxMouseEvent& event) { event.Skip(); }
    virtual void onPaintRightAxis(wxPaintEvent& event) { event.Skip(); }
    virtual void onRefreshTimer(wxTimerEvent& event) { event.Skip(); }

public:
    wxBitmapToggleButton* GetBtToggleConnection() { return m_btToggleConnection; }
    wxStaticLine* GetStaticLine75573() { return m_staticLine75573; }
    wxBitmapToggleButton* GetBtToggleMeasurePointsAxis() { return m_btToggleMeasurePointsAxis; }
    wxBitmapToggleButton* GetBtToggleConfiguredAxis() { return m_btToggleConfiguredAxis; }
    wxBitmapToggleButton* GetBtToggleMeasuredSpeedAxis() { return m_btToggleMeasuredSpeedAxis; }
    wxBitmapToggleButton* GetBtToggleReceivedSpeedAxis() { return m_btToggleReceivedSpeedAxis; }
    wxStaticText* GetStaticText7610() { return m_staticText7610; }
    wxStaticLine* GetStaticLine7557() { return m_staticLine7557; }
    wxBitmapButton* GetBtClear() { return m_btClear; }
    wxBitmapButton* GetBtSave() { return m_btSave; }
    wxStaticText* GetStaticText7534() { return m_staticText7534; }
    wxSlider* GetIntervalSlider() { return m_intervalSlider; }
    wxStaticText* GetStaticText7614() { return m_staticText7614; }
    wxPanel* GetLeftAxis() { return m_leftAxis; }
    wxPanel* GetDarwingArea() { return m_darwingArea; }
    wxScrolledWindow* GetScrollWindow() { return m_scrollWindow; }
    wxPanel* GetRightAxis() { return m_rightAxis; }
    wxTimer* GetRefreshTimer() { return m_refreshTimer; }
    CncSpeedMonitorBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,300), long style = wxTAB_TRAVERSAL);
    virtual ~CncSpeedMonitorBase();
};

#endif
