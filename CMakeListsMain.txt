set(CMAKE_CXX_STANDARD 11)

set(CMAKE_LIBRARY_PATH "${LD_LIBRARY_PATH}")

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}  -Wno-deprecated-declarations")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}  -Wno-return-local-addr")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}  -Wall")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}  -O3")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}  -fpic")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}  -D _FILE_OFFSET_BITS=64")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}  -D WXUSINGDLL")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}  -D __WXGTK__")
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -D BOOST_STACKTRACE_USE_BACKTRACE")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}  -D BOOST_STACKTRACE_USE_ADDR2LINE")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}  -pthread")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}  -ansi ")

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lwx_gtk3u_gl-3.1 -lGL -lGLU -lwx_gtk3u_core-3.1 -lwx_baseu-3.1")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lwx_baseu_xml-3.1")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lwx_gtk3u_propgrid-3.1")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lwx_gtk3u_stc-3.1")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lwx_gtk3u_aui-3.1")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lwx_gtk3u_xrc-3.1")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lwxsvg")

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lglut")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -latk-1.0")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lgio-2.0")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lpangoft2-1.0")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lpangocairo-1.0")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lcairo -lpango-1.0") 
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lfreetype") 
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lfontconfig")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lgtk-3")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lgdk-3")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lgdk_pixbuf-2.0") 
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lgobject-2.0") 
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lgmodule-2.0") 
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lgthread-2.0") 
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lglib-2.0") 
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lgobject-2.0") 
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lX11") 
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lXxf86vm") 
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lSM")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lz -ldl -lm -lrt -lz -ldl -lm")

# to log all properties
if ( false )
    get_cmake_property(_variableNames VARIABLES)
    foreach (_variableName ${_variableNames})
        message(STATUS "${_variableName}=${${_variableName}}")
    endforeach()

endif()

file(MAKE_DIRECTORY "${CNC_BUILD_HOME}/cnc/CncControlerGui/Release")
set(EXECUTABLE_OUTPUT_PATH "${CNC_BUILD_HOME}/cnc/CncControlerGui/Release")

include(CMakeListsSourceFiles.txt)
add_executable(cnc ${SOURCE_FILES})
